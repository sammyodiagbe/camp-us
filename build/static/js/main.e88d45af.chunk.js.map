{"version":3,"sources":["helpers/api-end-points.js","redux/actions/app-interaction.js","redux/action-types.js","components/authentication/signup.js","helpers/validateSignupFields.js","redux/actions/auth-actions.js","components/authentication/login.js","redux/actions/profile.js","components/partials/navigation.js","redux/actions/post-comment.js","components/partials/head.js","components/partials/says.js","components/profile/profile.js","components/main/home.js","components/partials/conversation.js","components/main/message.js","redux/actions/conversations.js","components/main/chat.js","redux/actions/chats.js","components/partials/search.js","components/main/search.js","redux/actions/search.js","components/main/notification.js","redux/actions/notifications.js","components/main/view-post.js","App.js","redux/reducers/auth-reducer.js","redux/reducers/profile-reducer.js","redux/reducers/appInteractionReducer.js","redux/reducers/conversationReducer.js","redux/reducers/searchReducer.js","redux/reducers/notificationsReducer.js","redux/reducers/index.js","redux/index.js","socket/index.js","index.js","assets/audio/get-outta-here.ogg","assets/audio/insight.ogg"],"names":["baseUrl","apiUrl","CREATE_ACCOUNT_ENDPOINT","LOG_IN_USER","VERIFY_AUTHENTICATION","GET_USER_PROFILE","CHECK_RELATIONSHIP","LOAD_FEEDS","GET_USER_SAYS","HAVE_SAY","COMMENT","LIKE_UNLIKE","FOLLOW","UNFOLLOW","GET_CONVERSATIONS","GET_ACTIVE_CONVERSATION","SEND_MESSAGE","FIND_SOMEONE","GET_USER_NOTIFICATIONS","GET_POST_DATA","isVerifyingUserAuthentication","verify","type","payload","isLoggingIn","islogginin","isCreatingAccount","iscreatingaccount","isGettingUserProfileDetails","getting","isGettingUserSays","isgetting","isGettingPost","isGettingConversation","Signup","props","handleInputChange","e","target","id","value","input","state","setState","createUserAccount","preventDefault","fields","checkError","errors","validationSchema","name","message","isValid","trim","RegExp","test","email","nickname","password","cpassword","field","check","validateSignupFields","error","key","console","log","data","this","className","onSubmit","noValidate","htmlFor","placeholder","onChange","to","Component","connect","dispatch","axios","post","withCredentials","then","response","catch","err","Login","login","username","logUserIn","setViewProfile","user","setViewedUserProfileSays","says","setRelationship","getUserSays","get","NavigationBar","_id","exact","activeClassName","HomeOutlined","fontSize","SearchOutlined","MessageOutlined","AccountCircle","NotificationsActiveOutlined","authentication","likeOrUnlike","postid","say","setFeeds","feeds","HeadBalloon","postText","postSomething","postSay","unfollowUser","followUser","page","isAuthUser","relationship","isMutual","isFollowing","renderActions","Fragment","onClick","ChatBubbleOutlineRounded","color","content","audio","Audio","donePosting","play","remove","haveASay","whomToFollow","whoToUnfollow","Says","renderSays","map","index","said_by","likes","comments","id_of_user","sound","likeSound","length","FavoriteOutlined","pathname","ChatBubbleOutlineOutlined","Profile","isAuthUsers","feeds_socket","authUserId","profile_id","match","params","io","getUserProfile","checkRelationship","setInterval","emit","on","newfeeds","oldFeeds","disconnect","viewed_profile","isgettingprofile","isgettingsays","profile","interactions","viewed_user_says","viewed_user","isgettingprofiledetails","viewedProfileRelationship","authuserid","friendid","Home","loadFeeds","newsfeeds","style","reverse","getDerivedStateFromProps","conversation","Conversation","authuser","conversations","renderConversations","messages","user1","user2","usr","recentMessage","body","slice","Messages","getConversations","Chat","chat_nsp","friend","sendMessage","trimLeft","trimRight","newmessage","time","Date","now","typing","chatBodyRef","scrollTop","scrollHeight","appendMessage","sender","fetchConversation","isgettingconversation","chatConversation","gettingconversation","chatm","fontWeight","ref","SendOutlined","nextProps","activeBubble","conversationid","Search","searchedusers","renderSearchedUsers","searchquery","findUser","searches","Axios","Notification","getUserNotifications","notifications","setUserNotifications","ViewPost","comment","getPost","isgettingsay","viewedPost","isgettingsinglesay","getViewedPostData","addComment","App","isverifyingauth","Socket","path","render","component","isverifyingauthentication","defaultStore","initialState","isFollowingUser","relationshipIsMutual","initState","isloggingin","conversationReducer","action","searchReducer","notificationsReducer","rootReducer","combineReducers","ConversationReducer","SearchReducer","notification","NotificationReducer","middleWare","composeWithDevTools","applyMiddleware","reduxThunk","store","createStore","undefined","IO","setActiveUser","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e88d45af.chunk.js","sourcesContent":["export const baseUrl = \"http://localhost:5000\";\nexport const apiUrl = `${baseUrl}/api/v1`;\n\n// authentication\nexport const CREATE_ACCOUNT_ENDPOINT = `${apiUrl}/auth/create-account`;\nexport const LOG_IN_USER = `${apiUrl}/auth/login`;\nexport const VERIFY_AUTHENTICATION = `${apiUrl}/auth/verify-authentication`;\n\n// profile\nexport const GET_USER_PROFILE = `${apiUrl}/profile`;\n\n// check relationship between auth user id and the current profile user\nexport const CHECK_RELATIONSHIP = `${apiUrl}/profile/check-connection`;\nexport const LOAD_FEEDS = `${apiUrl}/profile/feeds/get-feeds`;\n\n// says\nexport const GET_USER_SAYS = `${apiUrl}/says`;\n\n// user interactions\nexport const HAVE_SAY = `${apiUrl}/interaction/new-post`;\nexport const COMMENT = `${apiUrl}/interaction/new-comment`;\nexport const LIKE_UNLIKE = `${apiUrl}/interaction/post/like`;\n// following and unfollowing =\nexport const FOLLOW = `${apiUrl}/connections/follow`;\nexport const UNFOLLOW = `${apiUrl}/connections/unfollow`;\n\n// getting users conversations\nexport const GET_CONVERSATIONS = `${apiUrl}/messaging/get-all-conversations`;\nexport const GET_ACTIVE_CONVERSATION = `${apiUrl}/messaging/get-active-conversation`;\n\n// sending message\nexport const SEND_MESSAGE = `${apiUrl}/messaging/new-message`;\n\n// searching for a user\nexport const FIND_SOMEONE = `${apiUrl}/people/search`;\n\n// notification\nexport const GET_USER_NOTIFICATIONS = `${apiUrl}/notifications/get-notifications`;\n\n// viewed post\nexport const GET_POST_DATA = `${apiUrl}/interaction/getpost`;\n","import {\n    IS_LOGGING_IN,\n    IS_CREATING_ACCOUNT,\n    IS_GETTING_PROFILE_DETAILS,\n    IS_GETTING_SAYS,\n    IS_VERIFYING_AUTHENTICATION,\n    IS_GETTING_SAY,\n    IS_GETTING_CONVERSATION\n} from \"../action-types\";\n\nexport const isVerifyingUserAuthentication = (verify) => {\n    return {\n        type: IS_VERIFYING_AUTHENTICATION,\n        payload: verify\n    };\n};\nexport const isLoggingIn = (islogginin) => {\n    return {\n        type: IS_LOGGING_IN,\n        payload: islogginin\n    };\n};\n\nexport const isCreatingAccount = (iscreatingaccount) => {\n    return {\n        type: IS_CREATING_ACCOUNT,\n        payload: iscreatingaccount\n    };\n};\n\nexport const isGettingUserProfileDetails = (getting) => {\n    return {\n        type: IS_GETTING_PROFILE_DETAILS,\n        payload: getting\n    };\n};\n\nexport const isGettingUserSays = (isgetting) => {\n    return {\n        type: IS_GETTING_SAYS,\n        payload: isgetting\n    };\n};\n\nexport const isGettingPost = (isgetting) => {\n    return {\n        type: IS_GETTING_SAY,\n        payload: isgetting\n    };\n};\n\nexport const isGettingConversation = (isgetting) => {\n    return {\n        type: IS_GETTING_CONVERSATION,\n        payload: isgetting\n    };\n};\n","// Authentication\n\nexport const CREATE_ACCOUNT = \"CREATE_ACCOUNT\";\nexport const SET_ACTIVE_USER = \"SET_ACTIVE_USER\";\n\n// profile actions\n\nexport const SET_VIEWED_PROFILE = \"SET_VIEWED_PROFILE\";\nexport const SET_VIEWED_USER_SAYS = \"SET_VIEWED_USER_SAYS\";\n\n// app interaction\n\nexport const IS_LOGGING_IN = \"IS_LOGGING_IN\";\nexport const IS_CREATING_ACCOUNT = \"IS_CREATING_ACCOUNT\";\nexport const IS_GETTING_PROFILE_DETAILS = \"IS_GETTING_PROFILE_DETAILS\";\nexport const IS_GETTING_SAYS = \"IS_GETTING_SAYS\";\nexport const IS_VERIFYING_AUTHENTICATION = \"IS_VERIFYING_AUTHENTICATION\";\n\n// relationship\nexport const SET_RELATIONSHIP = \"SET_RELATIONSHIP\";\n\n// messages and conversations\nexport const SET_CONVERSATIONS = \"GET_CONVERSATIONS\";\nexport const SET_ACTIVE_CONVERSATION = \"GET_ACTIVE_CONVERSATION\";\n\n// news feeds\nexport const SET_FEEDS = \"SET_FEEDS\";\n\n// setting search result\nexport const SET_SEARCH_RESULT = \"SET_SEARCH_RESULT\";\n\n// notifications\nexport const GET_USER_NOTIFICATIONS = \"GET_USER_NOTIFICATIONS\";\nexport const SET_USER_NOTIFICATIONS = \"SET_USER_NOTIFICATIONS\";\n\n// get viewed post data\nexport const SET_VIEWED_POST = \"SET_VIEWED_POST\";\nexport const IS_GETTING_SAY = \"IS_GETTING_SAY\";\n\n// socket\nexport const APPEND_MESSAGE = \"APPEND_MESSAGE\";\n\nexport const IS_GETTING_CONVERSATION = \"IS_GETTING_CONVERSATION\";\n","import React, { Component } from \"react\";\nimport validateSignupFields from \"../../helpers/validateSignupFields\";\nimport { connect } from \"react-redux\";\nimport { createUserAccount } from \"../../redux/actions/auth-actions\";\nimport \"../../styles/authentication/auth.css\";\nimport { Link } from \"react-router-dom\";\n\nclass Signup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            input: {\n                name: \"\",\n                email: \"\",\n                nickname: \"\",\n                password: \"\",\n                cpassword: \"\"\n            }\n        };\n    }\n\n    handleInputChange = (e) => {\n        const { id, value } = e.target;\n        const input = { ...this.state.input, [id]: value };\n\n        this.setState({\n            input\n        });\n    };\n\n    createUserAccount = (e) => {\n        e.preventDefault();\n        const fields = this.state.input;\n        let checkError = validateSignupFields(fields);\n        let error = false;\n        // check if  fields contains an error\n\n        for (const key in checkError) {\n            if (checkError[key]) {\n                error = true;\n            }\n        }\n        if (error) {\n            console.log(checkError);\n            console.log(\"There are fields with errors\");\n        } else {\n            let data = { ...fields };\n            delete data.cpassword;\n            this.props.createUserAccount(data);\n        }\n    };\n\n    render() {\n        const { input } = this.state;\n        const { name, email, password, cpassword, nickname } = input;\n        return (\n            <div className='camp-auth-container'>\n                <h1 className='camp-auth-title'>Create Account</h1>\n                <form onSubmit={this.createUserAccount} noValidate>\n                    <div>\n                        <label htmlFor='name'>\n                            Full Name\n                            <input\n                                type='text'\n                                id='name'\n                                placeholder='James Allen'\n                                onChange={this.handleInputChange}\n                                value={name}\n                            />\n                        </label>\n                    </div>\n\n                    <div>\n                        <label htmlFor='email'>\n                            Email\n                            <input\n                                type='email'\n                                id='email'\n                                placeholder='Email'\n                                onChange={this.handleInputChange}\n                                value={email}\n                            />\n                        </label>\n                    </div>\n\n                    <div>\n                        <label htmlFor='nickname'>\n                            Nickname\n                            <input\n                                type='text'\n                                id='nickname'\n                                placeholder='Nickname'\n                                onChange={this.handleInputChange}\n                                value={nickname}\n                            />\n                        </label>\n                    </div>\n\n                    <div>\n                        <label htmlFor='cpassword'>\n                            Password\n                            <input\n                                type='password'\n                                id='password'\n                                placeholder='Password'\n                                onChange={this.handleInputChange}\n                                value={password}\n                            />\n                        </label>\n                    </div>\n\n                    <div>\n                        <label htmlFor='cpassword'>\n                            Confirm Password\n                            <input\n                                type='password'\n                                id='cpassword'\n                                placeholder='Confirm Password'\n                                onChange={this.handleInputChange}\n                                value={cpassword}\n                            />\n                        </label>\n                    </div>\n                    <div>\n                        <button type='submit'>Create Account</button>\n                    </div>\n                </form>\n                <p>\n                    Already have an account <Link to='/auth/login'>Login</Link>\n                </p>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createUserAccount: (data) => {\n            return dispatch(createUserAccount(data));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n","export default function(fields) {\n    let errors = {};\n    const validationSchema = {\n        name: {\n            message: \"Name is required\",\n            isValid: function(value) {\n                if (value.trim() === \"\") return false;\n                let regex = new RegExp(\"^(?=.[a-zA-Z])\");\n                return regex.test(value);\n            }\n        },\n        email: {\n            message: \"Email field is required\",\n            isValid: function(value) {\n                if (value.trim() === \"\") return false;\n                let regex = new RegExp(\"^[a-zA-Z0-9_.-]{2,}@[a-zA-Z0-9]{2,}.[a-zA-Z0-9]{2,}$\");\n                return regex.test(value);\n            }\n        },\n        nickname: {\n            message: \"Nickname field is required\",\n            isValid: function(value) {\n                if (value.trim() === \"\") return false;\n                let regex = /^\\w{1,}$/;\n                return regex.test(value);\n            }\n        },\n        password: {\n            message: \"Password field is required\",\n            isValid: function(value) {\n                if (value.trim() === \"\") return false;\n                let regex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,30})\");\n                return regex.test(value);\n            }\n        },\n\n        cpassword: {\n            message: \"Passwords do not match\",\n            isValid: function(value) {\n                return value === fields[\"password\"];\n            }\n        }\n    };\n\n    // loop through the fields\n    for (const value in fields) {\n        let field = validationSchema[value];\n        let check = field.isValid(fields[value]);\n        if (!check) {\n            errors[value] = field.message;\n        } else {\n            errors[value] = null;\n        }\n    }\n\n    return errors;\n}\n","//import { CREATE_ACCOUNT } from \"../action-types\";\nimport {\n    CREATE_ACCOUNT_ENDPOINT,\n    LOG_IN_USER,\n    VERIFY_AUTHENTICATION\n} from \"../../helpers/api-end-points\";\nimport axios from \"axios\";\nimport { SET_ACTIVE_USER } from \"../action-types\";\nimport { isCreatingAccount, isLoggingIn, isVerifyingUserAuthentication } from \"./app-interaction\";\n\nexport const createUserAccount = (data) => {\n    return (dispatch) => {\n        dispatch(isCreatingAccount(true));\n        const createUserAccount = axios.post(CREATE_ACCOUNT_ENDPOINT, data, {\n            withCredentials: true\n        });\n        createUserAccount\n            .then((response) => {\n                console.log(response.data);\n                dispatch(isCreatingAccount(false));\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch(isCreatingAccount(false));\n            });\n    };\n};\n\nexport const logUserIn = (data) => {\n    return (dispatch) => {\n        dispatch(isLoggingIn(true));\n        const logUserIn = axios.post(LOG_IN_USER, data, { withCredentials: true });\n        logUserIn\n            .then((response) => {\n                console.log(response.data);\n                dispatch(isLoggingIn(false));\n            })\n            .catch((err) => dispatch(isLoggingIn(false)));\n    };\n};\n\n// verify user authentication\nexport const verifyUserAuthentication = () => {\n    return (dispatch) => {\n        dispatch(isVerifyingUserAuthentication(true));\n        const verifyAuth = axios.post(VERIFY_AUTHENTICATION, null, { withCredentials: true });\n        verifyAuth\n            .then((response) => {\n                const { user } = response.data;\n                dispatch(setActiveUser(user));\n                dispatch(isVerifyingUserAuthentication(false));\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch(isVerifyingUserAuthentication(false));\n            });\n    };\n};\n\nfunction setActiveUser(user) {\n    return {\n        type: SET_ACTIVE_USER,\n        payload: user\n    };\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { logUserIn } from \"../../redux/actions/auth-actions\";\nimport \"../../styles/authentication/auth.css\";\nimport { Link } from \"react-router-dom\";\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            input: {\n                username: \"\",\n                password: \"\"\n            }\n        };\n    }\n\n    handleInputChange = (e) => {\n        const { id, value } = e.target;\n        const input = { ...this.state.input, [id]: value };\n        this.setState({\n            input\n        });\n    };\n\n    login = (e) => {\n        e.preventDefault();\n        const { input: data } = this.state;\n        this.props.login(data);\n    };\n    render() {\n        const { input } = this.state;\n        const { username, password } = input;\n        return (\n            <div className='camp-auth-container'>\n                <h1 className='camp-auth-title'>Login</h1>\n                <form onSubmit={this.login} noValidate>\n                    <div>\n                        <label htmlFor='username'>\n                            <input\n                                type='text'\n                                placeholder='username or email'\n                                id='username'\n                                value={username}\n                                onChange={this.handleInputChange}\n                            />\n                        </label>\n                    </div>\n                    <div>\n                        <label htmlFor='password'>\n                            <input\n                                type='password'\n                                placeholder='Password'\n                                id='password'\n                                value={password}\n                                onChange={this.handleInputChange}\n                            />\n                        </label>\n                    </div>\n                    <div>\n                        <button type='submit'>Login</button>\n                    </div>\n                </form>\n                <p>\n                    Don't have an account <Link to='/auth/signup'>Create Account</Link>\n                </p>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        login: (data) => {\n            return dispatch(logUserIn(data));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import axios from \"axios\";\nimport { SET_VIEWED_PROFILE, SET_VIEWED_USER_SAYS, SET_RELATIONSHIP } from \"../action-types\";\nimport {\n    GET_USER_SAYS,\n    GET_USER_PROFILE,\n    CHECK_RELATIONSHIP,\n    FOLLOW,\n    UNFOLLOW\n} from \"../../helpers/api-end-points\";\nimport { isGettingUserProfileDetails, isGettingUserSays } from \"./app-interaction\";\n\nexport const setViewProfile = (user) => {\n    return {\n        type: SET_VIEWED_PROFILE,\n        payload: user\n    };\n};\n\n// set viewed profile say\nexport const setViewedUserProfileSays = (says) => {\n    return {\n        type: SET_VIEWED_USER_SAYS,\n        payload: says\n    };\n};\n\nexport const setRelationship = (data) => {\n    return {\n        type: SET_RELATIONSHIP,\n        payload: data\n    };\n};\n\n// get a user says\nexport const getUserSays = (id) => {\n    return (dispatch) => {\n        dispatch(isGettingUserSays(true));\n        let getSays = axios.get(`${GET_USER_SAYS}/${id}`, { withCredentials: true });\n        getSays\n            .then((response) => {\n                const { data } = response;\n                dispatch(setViewedUserProfileSays(data.says));\n                dispatch(isGettingUserSays(false));\n            })\n            .catch((err) => isGettingUserSays(false));\n    };\n};\n\n// get user profile\nexport const getUserProfile = (id) => {\n    return (dispatch) => {\n        dispatch(isGettingUserProfileDetails(true));\n        let getProfile = axios.get(`${GET_USER_PROFILE}/${id}`, { withCredentials: true });\n        getProfile\n            .then((response) => {\n                const { user } = response.data;\n                dispatch(setViewProfile(user));\n                dispatch(getUserSays(id));\n                dispatch(isGettingUserProfileDetails(false));\n            })\n            .then((err) => dispatch(isGettingUserProfileDetails(false)));\n    };\n};\n\n// follow a user\nexport const followUser = (id) => {\n    return (dispatch) => {\n        const follow = axios.post(FOLLOW, { whomToFollow: id }, { withCredentials: true });\n        follow\n            .then((response) => {\n                console.log(\"data \", response.data);\n            })\n            .catch((err) => console.log(err));\n    };\n};\n\nexport const unfollowUser = (id) => {\n    console.log(\"let us unfollow user\");\n    return (dispatch) => {\n        const unfollow = axios.post(UNFOLLOW, { whoToUnfollow: id }, { withCredentials: true });\n        unfollow\n            .then((response) => {\n                console.log(response.data);\n            })\n            .then((err) => console.log(err));\n    };\n};\n\nexport const checkRelationship = (friendid) => {\n    return (dispatch) => {\n        // check the relationship between authenticated user and the current profile(user)\n        let checkRelationship = axios.get(`${CHECK_RELATIONSHIP}/${friendid}`, {\n            withCredentials: true\n        });\n        checkRelationship\n            .then((response) => {\n                const { data } = response;\n                console.log(data);\n                dispatch(setRelationship(data));\n            })\n            .catch((err) => console.log(err));\n    };\n};\n","import React, { Component } from \"react\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport \"../../styles/navigation/navigation.css\";\nimport {\n    HomeOutlined,\n    SearchOutlined,\n    AccountCircle,\n    NotificationsActiveOutlined,\n    MessageOutlined\n} from \"@material-ui/icons\";\nimport { connect } from \"react-redux\";\n\nclass NavigationBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: null\n        };\n    }\n\n    componentDidMount() {\n        this.setState({\n            user: this.props.user\n        });\n    }\n\n    render() {\n        const { user } = this.props;\n        const { _id } = user ? user : {};\n        if (!user) {\n            return <Redirect to='/auth/login' />;\n        }\n        return (\n            <div className='camp-navigation-bar'>\n                <nav className='camp-mobile-navigation-bar'>\n                    <div>\n                        <NavLink to='/' exact activeClassName='camp-active-nav'>\n                            <HomeOutlined fontSize='default' className='camp-navigation-icon' />\n                        </NavLink>\n                    </div>\n                    <div>\n                        <NavLink to='/search' exact activeClassName='camp-active-nav'>\n                            <SearchOutlined fontSize='default' className='camp-navigation-icon' />\n                        </NavLink>\n                    </div>\n                    <div>\n                        <NavLink to='/messages' exact activeClassName='camp-active-nav'>\n                            <MessageOutlined fontSize='default' className='camp-navigation-icon' />\n                        </NavLink>\n                    </div>\n                    <div>\n                        <NavLink to={`/profile/${_id}`} exact activeClassName='camp-active-nav'>\n                            <AccountCircle fontSize='default' className='camp-navigation-icon' />\n                        </NavLink>\n                    </div>\n                    <div>\n                        <NavLink to='/notifications' exact activeClassName='camp-active-nav'>\n                            <NotificationsActiveOutlined\n                                fontSize='default'\n                                className='camp-navigation-icon'\n                            />\n                        </NavLink>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { authentication } = state;\n\n    return {\n        user: authentication.user\n    };\n};\n\nexport default connect(mapStateToProps, null)(NavigationBar);\n","import axios from \"axios\";\nimport {\n    HAVE_SAY,\n    COMMENT,\n    LIKE_UNLIKE,\n    LOAD_FEEDS,\n    GET_POST_DATA\n} from \"../../helpers/api-end-points\";\nimport donePosting from \"../../assets/audio/insight.ogg\";\nimport { SET_FEEDS, SET_VIEWED_POST } from \"../action-types\";\nimport { isGettingPost } from \"./app-interaction\";\n\nexport const setViewedPost = (data) => {\n    return {\n        type: SET_VIEWED_POST,\n        payload: data\n    };\n};\nexport const getViewedPostData = (postid) => {\n    return (dispatch) => {\n        dispatch(isGettingPost(true));\n        let post = axios.get(`${GET_POST_DATA}/${postid}`, { withCredentials: true });\n        post.then((response) => {\n            const { say } = response.data;\n            dispatch(isGettingPost(false));\n            dispatch(setViewedPost(say));\n        }).catch((err) => console.log(err));\n    };\n};\nexport const haveASay = (content) => {\n    return (dispatch) => {\n        let makeSay = axios.post(HAVE_SAY, { content }, { withCredentials: true });\n        makeSay\n            .then((response) => {\n                const audio = new Audio(donePosting);\n                audio\n                    .play()\n                    .then(() => {\n                        audio.remove();\n                    })\n                    .catch((err) => console.log(err));\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n};\n\nexport const addComment = (comment, postid) => {\n    return (dispatch) => {\n        let addcomment = axios.post(COMMENT, { body: comment, postid }, { withCredentials: true });\n        addcomment\n            .then((response) => {})\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n};\n\nexport const likeOrUnlike = (postid) => {\n    return (dispatch) => {\n        let likeorunlike = axios.post(LIKE_UNLIKE, { say: postid }, { withCredentials: true });\n        likeorunlike.then((response) => {}).catch((err) => console.log(err));\n    };\n};\n\nexport const setFeeds = (feeds) => {\n    return {\n        type: SET_FEEDS,\n        payload: feeds\n    };\n};\n\nexport const loadFeeds = () => {\n    return (dispatch) => {\n        let gettingfeeds = axios.get(LOAD_FEEDS, { withCredentials: true });\n        gettingfeeds\n            .then((response) => {\n                const { data } = response;\n                const { feeds } = data;\n                dispatch(setFeeds(feeds));\n            })\n            .catch((err) => console.log(err));\n    };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { haveASay } from \"../../redux/actions/post-comment\";\nimport { Link } from \"react-router-dom\";\nimport { followUser, unfollowUser } from \"../../redux/actions/profile\";\nimport { ChatBubbleOutlineRounded } from \"@material-ui/icons\";\n\nclass HeadBalloon extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            postText: \"\"\n        };\n    }\n    handleInputChange = (e) => {\n        const { value } = e.target;\n        this.setState({\n            postText: value\n        });\n    };\n    postSomething = (e) => {\n        e.preventDefault();\n        const { postText } = this.state;\n        if (postText === \"\") return;\n        // make post to the backend;\n        this.props.postSay(postText);\n        this.setState({\n            postText: \"\"\n        });\n    };\n\n    unfollowUser = () => {\n        // this.props.unFollowUser()\n        const { user, unfollowUser } = this.props;\n        return unfollowUser(user._id);\n    };\n\n    followUser = () => {\n        const { user, followUser } = this.props;\n        return followUser(user._id);\n    };\n    render() {\n        const { postText } = this.state;\n        const { page, isAuthUser, user, relationship } = this.props;\n        const { isMutual, isFollowing } = relationship ? relationship : {};\n        const { name, nickname, _id } = user;\n        const renderActions =\n            page === \"profile\" && !isAuthUser ? (\n                <div className='camp-relation-container'>\n                    {isFollowing || isMutual ? (\n                        <button\n                            className='camp-relation camp-relation-unfollow'\n                            onClick={this.unfollowUser}>\n                            Unfollow\n                        </button>\n                    ) : (\n                        <button\n                            className='camp-relation camp-relation-follow'\n                            onClick={this.followUser}>\n                            Follow\n                        </button>\n                    )}\n                    {isMutual && (\n                        <Link to={`/chat/${_id}`}>\n                            <ChatBubbleOutlineRounded color={\"action\"} />\n                        </Link>\n                    )}\n                </div>\n            ) : (\n                <React.Fragment></React.Fragment>\n            );\n        return (\n            <div className='camp-balloon-head'>\n                <div className='camp-head-top'>\n                    <div className='camp-user-avatar'></div>\n                    <div className='camp-user-details'>\n                        <h3>{`${name}`}</h3>\n                        <p>{`@${nickname}`}</p>\n                    </div>\n                </div>\n                {isAuthUser && (\n                    <div className='camp-head-bottom'>\n                        <form noValidate onSubmit={this.postSomething}>\n                            <textarea\n                                placeholder='Have a say'\n                                value={postText}\n                                onChange={this.handleInputChange}></textarea>\n                            <button>Make post</button>\n                        </form>\n                    </div>\n                )}\n\n                {renderActions}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        postSay: (content) => {\n            return dispatch(haveASay(content));\n        },\n        followUser: (id) => {\n            return dispatch(followUser(id));\n        },\n        unfollowUser: (id) => {\n            return dispatch(unfollowUser(id));\n        }\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(HeadBalloon);\n","import React, { Component } from \"react\";\nimport { FavoriteOutlined, ChatBubbleOutlineOutlined } from \"@material-ui/icons\";\nimport { connect } from \"react-redux\";\nimport { likeOrUnlike } from \"../../redux/actions/post-comment\";\nimport likeSound from \"../../assets/audio/get-outta-here.ogg\";\nimport { Link } from \"react-router-dom\";\n\nclass Says extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n    render() {\n        const { says, likeOrUnlike } = this.props;\n        const renderSays = says ? (\n            says.map((say, index) => {\n                const { content, said_by, _id, likes, comments } = say;\n                const { name, nickname, _id: id_of_user } = said_by;\n                return (\n                    <div className='camp-a-say' key={index}>\n                        <div className='camp-say-top'>\n                            <div className='camp-say-talker'></div>\n                            <div className='camp-say-talker-details'>\n                                <h4>\n                                    <Link to={`/profile/${id_of_user}`}>{`${name}`}</Link>\n                                </h4>\n                                <p>{`@${nickname}`}</p>\n                            </div>\n                            <div className='camp-say-time'>\n                                <p>just now</p>\n                            </div>\n                        </div>\n                        <div className='camp-say-bottom'>\n                            <div className='camp-say-say'>\n                                <p>{content}</p>\n                            </div>\n                            <div className='camp-say-reaction'>\n                                <button\n                                    onClick={() => {\n                                        let sound = new Audio(likeSound);\n                                        sound\n                                            .play()\n                                            .then(() => {\n                                                sound.remove();\n                                            })\n                                            .catch((err) => console.log(err));\n                                        likeOrUnlike(_id);\n                                    }}>\n                                    {likes.length}\n                                    <FavoriteOutlined\n                                        fontSize='small'\n                                        color='secondary'\n                                        className='camp-react'\n                                    />\n                                </button>\n                                <Link to={{ pathname: `/view-post/${_id}`, say }}>\n                                    {comments.length}{\" \"}\n                                    <ChatBubbleOutlineOutlined\n                                        fontSize='small'\n                                        className='camp-react'\n                                    />\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                );\n            })\n        ) : (\n            <div>hello</div>\n        );\n        return <div className='camp-render-says'>{renderSays}</div>;\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        likeOrUnlike: (postid) => {\n            return dispatch(likeOrUnlike(postid));\n        }\n    };\n};\nexport default connect(null, mapDispatchToProps)(Says);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    setViewProfile,\n    getUserSays,\n    getUserProfile,\n    checkRelationship,\n    setRelationship,\n    setViewedUserProfileSays\n} from \"../../redux/actions/profile\";\nimport NavigationBar from \"../partials/navigation\";\nimport HeadBalloon from \"../partials/head\";\nimport Says from \"../partials/says\";\nimport io from \"socket.io-client\";\nimport { baseUrl } from \"../../helpers/api-end-points\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isAuthUsers: false,\n            page: \"profile\",\n            feeds_socket: null\n        };\n    }\n\n    componentDidMount() {\n        const { user } = this.props;\n        const { _id: authUserId } = user;\n        const { profile_id } = this.props.match.params;\n        const feeds_socket = io.connect(`${baseUrl}/profile`);\n        if (!user) {\n            return <Redirect to='/auth/login' />;\n        }\n        if (authUserId === profile_id) {\n            this.setState({\n                isAuthUser: true,\n                feeds_socket: feeds_socket\n            });\n            this.props.setViewProfile(user);\n            this.props.getUserSays(authUserId);\n        } else {\n            // get the user profile\n            this.setState({\n                isAuthUser: false\n            });\n            this.props.getUserProfile(profile_id);\n            this.props.checkRelationship(profile_id);\n            setInterval(() => {\n                feeds_socket.emit(\"get_relationship\", { authUserId, profile_id });\n            }, 500);\n        }\n\n        feeds_socket.on(\"connect\", () => {\n            this.setState({\n                feeds_socket\n            });\n            feeds_socket.on(\"set_profile_feeds\", (newfeeds) => {\n                this.props.setFeeds(newfeeds);\n            });\n\n            feeds_socket.on(\"set_relationship\", (relationship) => {\n                this.props.setRelationship(relationship);\n            });\n        });\n\n        setInterval(() => {\n            const { isAuthUser } = this.state;\n            feeds_socket.emit(\"get_profile_feeds\", {\n                oldFeeds: this.props.says,\n                profile_id: isAuthUser ? authUserId : profile_id\n            });\n        }, 500);\n    }\n\n    componentWillUnmount() {\n        const { feeds_socket } = this.state;\n        feeds_socket.disconnect();\n\n        this.setState({\n            feeds_socket: null\n        });\n\n        this.props.setFeeds([]);\n        this.props.setRelationship({});\n        this.props.setViewProfile({});\n    }\n\n    render() {\n        const {\n            says,\n            viewed_profile,\n            isgettingprofile,\n            isgettingsays,\n            relationship,\n            user\n        } = this.props;\n\n        const { isAuthUser, page } = this.state;\n        if (!user) {\n            return <Redirect to='/auth/login' />;\n        }\n        return (\n            <React.Fragment>\n                <NavigationBar />\n                <div className='camp-main-content'>\n                    {isgettingsays || isgettingprofile ? (\n                        <p>Getting details hold on</p>\n                    ) : (\n                        <React.Fragment>\n                            <HeadBalloon\n                                isAuthUser={isAuthUser}\n                                page={page}\n                                user={viewed_profile}\n                                relationship={relationship}\n                            />\n                            <Says says={says} />{\" \"}\n                        </React.Fragment>\n                    )}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { authentication, profile, interactions } = state;\n    return {\n        user: authentication.user,\n        says: profile.viewed_user_says,\n        viewed_profile: profile.viewed_user,\n        isgettingprofile: interactions.isgettingprofiledetails,\n        isgettingsays: interactions.isgettingsays,\n        relationship: profile.viewedProfileRelationship\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setViewProfile: (user) => {\n            return dispatch(setViewProfile(user));\n        },\n        getUserSays: (id) => {\n            return dispatch(getUserSays(id));\n        },\n        getUserProfile: (id) => {\n            return dispatch(getUserProfile(id));\n        },\n        checkRelationship: (authuserid, friendid) => {\n            return dispatch(checkRelationship(authuserid, friendid));\n        },\n        setRelationship: (relationship) => {\n            return dispatch(setRelationship(relationship));\n        },\n        setFeeds: (feeds) => {\n            return dispatch(setViewedUserProfileSays(feeds));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","import React, { Component } from \"react\";\nimport NavigationBar from \"../partials/navigation\";\nimport HeadBalloon from \"../partials/head\";\nimport Says from \"../partials/says\";\nimport { connect } from \"react-redux\";\nimport { loadFeeds, setFeeds } from \"../../redux/actions/post-comment\";\nimport io from \"socket.io-client\";\nimport { baseUrl } from \"../../helpers/api-end-points\";\nimport { Redirect } from \"react-router-dom\";\nimport Placeholder from \"../partials/placeholder\";\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            feeds_socket: null\n        };\n    }\n    componentDidMount() {\n        this.props.loadFeeds();\n        const { newsfeeds, user } = this.props;\n        let feeds_socket = io.connect(`${baseUrl}/feeds`);\n        feeds_socket.on(\"connect\", () => {\n            this.setState({\n                feeds_socket\n            });\n            feeds_socket.on(\"got_new_feeds\", (newfeeds) => {\n                this.props.setFeeds(newfeeds);\n            });\n        });\n\n        setInterval(() => {\n            feeds_socket.emit(\"get_feeds_update\", {\n                oldFeeds: newsfeeds,\n                authuserid: user._id\n            });\n        }, 500);\n    }\n\n    componentWillUnmount() {\n        const { feeds_socket } = this.state;\n        feeds_socket.disconnect();\n        this.setState({\n            feeds_socket: null\n        });\n    }\n    static getDerivedStateFromProps = () => {};\n    render() {\n        const { user, isgettingsays } = this.props;\n        if (!user) {\n            return <Redirect to='/auth/login' />;\n        }\n        return (\n            <React.Fragment>\n                <NavigationBar />\n                <div className='camp-main-content'>\n                    {isgettingsays ? (\n                        <p style={{ color: \"red\" }}>Getting some data</p>\n                    ) : (\n                        // <Placeholder />\n                        <React.Fragment>\n                            <HeadBalloon isAuthUser={true} user={user} />\n                            <Says says={this.props.newsfeeds.reverse()} />\n                        </React.Fragment>\n                    )}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { authentication, conversation, interactions } = state;\n    return {\n        user: authentication.user,\n        newsfeeds: conversation.newsfeeds,\n        isgettingsays: interactions.isgettingsays\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadFeeds: () => {\n            return dispatch(loadFeeds());\n        },\n        setFeeds: (feeds) => {\n            return dispatch(setFeeds(feeds));\n        }\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Conversation = ({ authuser, conversations }) => {\n    console.log(conversations);\n    const renderConversations = conversations.map((conversation, index) => {\n        const { messages, user1, user2 } = conversation;\n        const usr = authuser._id === user1._id ? user2 : user1;\n        const recentMessage =\n            messages[messages.length - 1].body.length > 30\n                ? `${messages[messages.length - 1].body.slice(0, 30)}......`\n                : messages[messages.length - 1].body;\n        return (\n            <Link to={`/chat/${usr._id}`} className='camp-a-card' key={index}>\n                <div className='camp-a-card-left'></div>\n                <div className='camp-a-card-right'>\n                    <h4>{usr.name}</h4>\n                    <p>{recentMessage}</p>\n                </div>\n            </Link>\n        );\n    });\n\n    return <React.Fragment>{renderConversations}</React.Fragment>;\n};\n\nexport default Conversation;\n","import React, { Component } from \"react\";\nimport \"../../styles/main/main.css\";\nimport NavigationBar from \"../partials/navigation\";\nimport { connect } from \"react-redux\";\nimport { getConversations } from \"../../redux/actions/conversations\";\nimport Conversation from \"../partials/conversation\";\nimport \"../../styles/conversation/conversation.css\";\nimport { Redirect } from \"react-router-dom\";\nclass Messages extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    componentDidMount() {\n        this.props.getConversations();\n    }\n\n    render() {\n        const { conversations, authuser } = this.props;\n        if (!authuser) {\n            return <Redirect to='/auth/login' />;\n        }\n\n        return (\n            <React.Fragment>\n                <NavigationBar />\n                <div className='camp-main-content'>\n                    <Conversation conversations={conversations} authuser={authuser} />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { conversation, authentication } = state;\n\n    return {\n        conversations: conversation.conversations,\n        authuser: authentication.user\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getConversations: () => {\n            return dispatch(getConversations());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Messages);\n","import axios from \"axios\";\nimport { GET_CONVERSATIONS } from \"../../helpers/api-end-points\";\nimport { SET_CONVERSATIONS } from \"../action-types\";\n\nconst setConversations = (data) => {\n    return {\n        type: SET_CONVERSATIONS,\n        payload: data\n    };\n};\nexport const getConversations = () => {\n    return (dispatch) => {\n        let getconversation = axios.get(GET_CONVERSATIONS, { withCredentials: true });\n        getconversation\n            .then((response) => {\n                console.log(response.data.conversations);\n                return dispatch(setConversations(response.data.conversations.reverse()));\n            })\n            .catch((err) => console.log(err));\n    };\n};\n","import React, { Component } from \"react\";\nimport NavigationBar from \"../partials/navigation\";\nimport \"../../styles/chat/chat.css\";\nimport { SendOutlined } from \"@material-ui/icons\";\nimport { fetchConversation, sendMessage, appendMessage } from \"../../redux/actions/chats\";\nimport { connect } from \"react-redux\";\nimport io from \"socket.io-client\";\nimport { baseUrl } from \"../../helpers/api-end-points\";\nimport { Redirect } from \"react-router-dom\";\nimport Placeholder from \"../partials/placeholder\";\n\nclass Chat extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            body: \"\",\n            chat_nsp: null,\n            typing: false,\n            friend: {},\n            friendid: \"\"\n        };\n    }\n\n    componentDidMount() {\n        const { friendid } = this.props.match.params;\n        const { _id } = this.props.authuser;\n        //const { friend } = this.state;\n        this.setState(\n            {\n                friendid\n            },\n            () => {\n                // get the conversation for this user\n                this.props.fetchConversation(friendid);\n            }\n        );\n        const chat_nsp = io.connect(`${baseUrl}/chat`);\n        chat_nsp.on(\"connect\", () => {\n            this.setState({\n                chat_nsp\n            });\n            chat_nsp.emit(\"user_connected\", { user: _id });\n            chat_nsp.on(\"typing\", () => {\n                this.setState({\n                    typing: true\n                });\n            });\n\n            chat_nsp.on(\"done_typing\", () => {\n                this.setState({\n                    typing: false\n                });\n            });\n\n            chat_nsp.on(\"new_message\", (data) => {\n                const { friend } = this.state;\n                this.props.appendMessage({ ...data, sender: friend._id });\n            });\n\n            // chat_nsp.on('disconnect', () => {\n            //     chat_nsp.d\n            // })\n        });\n    }\n\n    componentDidUpdate() {\n        const { isgettingconversation } = this.props;\n        if (!isgettingconversation) {\n            this.chatBodyRef.scrollTop = this.chatBodyRef.scrollHeight;\n        }\n    }\n\n    static getDerivedStateFromProps(nextProps, state) {\n        const { chatConversation, authuser } = nextProps;\n\n        if (typeof chatConversation.conversation !== \"undefined\") {\n            const { conversation } = chatConversation;\n            const { user1, user2 } = conversation;\n            return {\n                friend: authuser._id === user1._id ? user2 : user1\n            };\n        } else {\n            return {};\n        }\n    }\n\n    handleInputChange = (e) => {\n        const { value } = e.target;\n        const { chat_nsp, friend } = this.state;\n        if (value !== \"\" && value.length > 0) {\n            chat_nsp.emit(\"typing\", { friend: friend._id });\n        } else {\n            chat_nsp.emit(\"done_typing\", { friend: friend._id });\n        }\n        this.setState({\n            body: value\n        });\n    };\n\n    sendMessage = (e) => {\n        e.preventDefault();\n        const { body, friend, chat_nsp } = this.state;\n        const { authuser } = this.props;\n        if (body === \"\" || body.trimLeft() === \"\" || body.trimRight() === \"\") return;\n        const data = { body, friendid: friend._id };\n        const newmessage = { ...data, time: Date.now() };\n        chat_nsp.emit(\"new_message\", newmessage);\n        this.setState(\n            {\n                body: \"\",\n                typing: false\n            },\n            () => {\n                chat_nsp.emit(\"done_typing\", { friend: friend._id });\n                this.chatBodyRef.scrollTop = this.chatBodyRef.scrollHeight;\n            }\n        );\n        this.props.appendMessage({ ...newmessage, sender: authuser._id });\n        this.props.sendMessage(data);\n    };\n\n    componentWillUnmount() {\n        const { chat_nsp } = this.state;\n        if (chat_nsp) {\n            chat_nsp.disconnect();\n            this.setState({\n                chat_nsp: null\n            });\n        }\n    }\n    render() {\n        const { body, typing, friend } = this.state;\n        const { authuser, chatConversation, gettingconversation } = this.props;\n        console.log(\"getting data, \", gettingconversation);\n        const { _id } = authuser;\n        const { conversation } = chatConversation;\n        if (!authuser) {\n            return <Redirect to='/auth/login' />;\n        }\n        const chatm = conversation ? (\n            this.props.chatConversation.conversation.messages.map((message, index) => {\n                const { body, sender } = message;\n                return (\n                    <div\n                        className={`camp-chat-balloon ${\n                            sender === _id ? \"camp-balloon-authuser\" : \"camp-balloon-friend\"\n                        }`}\n                        key={index}>\n                        <div className='camp-balloon'>\n                            <p>{body}</p>\n                        </div>\n                    </div>\n                );\n            })\n        ) : (\n            <p>No message oo</p>\n        );\n        return (\n            <React.Fragment>\n                <NavigationBar />\n                <div className='camp-main-content'>\n                    <div className='camp-active-chat-bubble'>\n                        <div className='camp-bubble-head'>\n                            {gettingconversation ? (\n                                <React.Fragment>\n                                    <div className='camp-bubble-head-user'></div>\n                                    <div className='camp-chat-placeholder'>\n                                        <div className='camp-name'></div>\n                                        <div className='camp-username'></div>\n                                    </div>\n                                </React.Fragment>\n                            ) : (\n                                <React.Fragment>\n                                    <div className='camp-bubble-head-user'></div>\n                                    <div className='camp-bubble-head-user-details'>\n                                        <h4>{friend.name}</h4>\n                                        {typing ? (\n                                            <p style={{ color: \"green\", fontWeight: \"bolder\" }}>\n                                                typing...\n                                            </p>\n                                        ) : (\n                                            <p>@{friend.nickname}</p>\n                                        )}\n                                    </div>\n                                </React.Fragment>\n                            )}\n                        </div>\n                        <div className='camp-bubble-body' ref={(ref) => (this.chatBodyRef = ref)}>\n                            {gettingconversation ? (\n                                <React.Fragment>\n                                    <div className='left'>\n                                        <div></div>\n                                    </div>\n                                    <div className='right'>\n                                        <div></div>\n                                    </div>\n                                    <div className='left'>\n                                        <div></div>\n                                    </div>\n                                    <div className='right'>\n                                        <div></div>\n                                    </div>\n                                    <div className='right'>\n                                        <div></div>\n                                    </div>\n                                    <div className='right'>\n                                        <div></div>\n                                    </div>\n                                    <div className='left'>\n                                        <div></div>\n                                    </div>\n                                    <div className='right'>\n                                        <div></div>\n                                    </div>\n                                    <div className='right'>\n                                        <div></div>\n                                    </div>\n                                </React.Fragment>\n                            ) : (\n                                chatm\n                            )}\n                        </div>\n                        <div className='camp-bubble-leg'>\n                            <form noValidate onSubmit={this.sendMessage}>\n                                <textarea\n                                    placeholder='Your message...'\n                                    value={body}\n                                    onChange={this.handleInputChange}></textarea>\n                                <button>\n                                    <SendOutlined fontSize='default' />\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { conversation, authentication, interactions } = state;\n    return {\n        chatConversation: conversation.activeBubble,\n        authuser: authentication.user,\n        gettingconversation: interactions.isgettingconversation\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchConversation: (conversationid, friendid) => {\n            return dispatch(fetchConversation(conversationid, friendid));\n        },\n        sendMessage: (data) => {\n            return dispatch(sendMessage(data));\n        },\n        appendMessage: (data) => {\n            return dispatch(appendMessage(data));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\n","import axios from \"axios\";\nimport { GET_ACTIVE_CONVERSATION, SEND_MESSAGE } from \"../../helpers/api-end-points\";\nimport { SET_ACTIVE_CONVERSATION, APPEND_MESSAGE } from \"../action-types\";\nimport { isGettingConversation } from \"./app-interaction\";\n\nexport const setChatBubble = (data) => {\n    return {\n        type: SET_ACTIVE_CONVERSATION,\n        payload: data\n    };\n};\n\nexport const fetchConversation = (friendid) => {\n    return (dispatch) => {\n        dispatch(isGettingConversation(true));\n        const getConversation = axios.get(`${GET_ACTIVE_CONVERSATION}/${friendid}`, {\n            withCredentials: true\n        });\n        getConversation\n            .then((response) => {\n                dispatch(setChatBubble(response.data));\n                dispatch(isGettingConversation(false));\n            })\n            .catch((err) => {\n                dispatch(isGettingConversation(false));\n            });\n    };\n};\n\nexport const sendMessage = (data) => {\n    return (dispatch) => {\n        const sendmessage = axios.post(SEND_MESSAGE, data, { withCredentials: true });\n        sendmessage.then((response) => {}).catch((err) => console.log(err));\n    };\n};\n\nexport const appendMessage = (data) => {\n    return {\n        type: APPEND_MESSAGE,\n        payload: data\n    };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Search = ({ searchedusers, authuser }) => {\n    const { _id: authuserid } = authuser;\n    const renderSearchedUsers = searchedusers.map((user, index) => {\n        const { _id, name, nickname } = user;\n        return authuserid === _id ? null : (\n            <p className='camp-a-search' key={index}>\n                <Link to={`/profile/${_id}`}>{`${name}`}</Link>\n                <span>@{nickname}</span>\n            </p>\n        );\n    });\n    return <div className='camp-search-results'>{renderSearchedUsers}</div>;\n};\n\nexport default Search;\n","import \"../../styles/search/search.css\";\nimport React, { Component } from \"react\";\nimport HeaderNav from \"../partials/navigation\";\nimport { connect } from \"react-redux\";\nimport { findUser } from \"../../redux/actions/search\";\nimport Searches from \"../partials/search\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchquery: \"\"\n        };\n    }\n\n    handleInputChange = (e) => {\n        const { value } = e.target;\n        this.setState({\n            searchquery: value\n        });\n    };\n\n    findUser = (e) => {\n        console.log(\"finding user\");\n        e.preventDefault();\n        const { searchquery } = this.state;\n        console.log(searchquery);\n        if (searchquery.trimLeft() === \"\" || searchquery.trimRight() === \"\") return;\n        this.props.findUser(searchquery);\n    };\n\n    render() {\n        const { searchquery } = this.state;\n        const { searchedusers, authuser } = this.props;\n        if (!authuser) {\n            return <Redirect to='/auth/login' />;\n        }\n        return (\n            <React.Fragment>\n                <HeaderNav />\n                <div className='camp-main-content'>\n                    <div className='camp-search-container'>\n                        <form noValidate onSubmit={this.findUser}>\n                            <input\n                                type='text'\n                                placeholder='search friend'\n                                value={searchquery}\n                                onChange={this.handleInputChange}\n                            />\n                        </form>\n                    </div>\n                    <Searches authuser={authuser} searchedusers={searchedusers} />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateTProps = (state) => {\n    const { searches, authentication } = state;\n    return {\n        searchedusers: searches.searchedusers,\n        authuser: authentication.user\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        findUser: (searchquery) => {\n            return dispatch(findUser(searchquery));\n        }\n    };\n};\n\nexport default connect(mapStateTProps, mapDispatchToProps)(Search);\n","import Axios from \"axios\";\nimport { FIND_SOMEONE } from \"../../helpers/api-end-points\";\nimport { SET_SEARCH_RESULT } from \"../action-types\";\n\nexport const setSearchResult = (data) => {\n    return {\n        type: SET_SEARCH_RESULT,\n        payload: data\n    };\n};\nexport const findUser = (searchquery) => {\n    console.log(\"let find a user\");\n    return (dispatch) => {\n        let finduser = Axios.get(`${FIND_SOMEONE}/${searchquery}`, { withCredentials: true });\n        finduser\n            .then((response) => {\n                const { searchedusers } = response.data;\n                dispatch(setSearchResult(searchedusers));\n            })\n            .catch((err) => console.log(err));\n    };\n};\n","import React, { Component } from \"react\";\nimport HeaderNav from \"../partials/navigation\";\nimport { connect } from \"react-redux\";\nimport { getUserNotifications } from \"../../redux/actions/notifications\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Notification extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    componentDidMount() {\n        // get user notifications\n        this.props.getUserNotifications();\n    }\n\n    render() {\n        const { authuser } = this.props;\n        if (!authuser) {\n            return <Redirect to='/auth/login' />;\n        }\n        return (\n            <React.Fragment>\n                <HeaderNav />\n                <div className='camp-main-content'>user notifications</div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authuser: state.authentication.user\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getUserNotifications: () => {\n            return dispatch(getUserNotifications());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notification);\n","import axios from \"axios\";\nimport { SET_USER_NOTIFICATIONS } from \"../action-types\";\nimport { GET_USER_NOTIFICATIONS } from \"../../helpers/api-end-points\";\n\nexport const setUserNotifications = (notifications) => {\n    return {\n        type: SET_USER_NOTIFICATIONS,\n        payload: notifications\n    };\n};\nexport const getUserNotifications = () => {\n    return (dispatch) => {\n        const getnotifications = axios.get(GET_USER_NOTIFICATIONS, { withCredentials: true });\n        getnotifications\n            .then((response) => {\n                const { data } = response;\n                const { notifications } = data;\n                console.log(notifications);\n                dispatch(setUserNotifications(notifications));\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n};\n","import React, { Component } from \"react\";\nimport { FavoriteOutlined, ChatBubbleOutlineOutlined } from \"@material-ui/icons\";\nimport NavigationBar from \"../partials/navigation\";\nimport likeSound from \"../../assets/audio/get-outta-here.ogg\";\nimport { likeOrUnlike, getViewedPostData, addComment } from \"../../redux/actions/post-comment\";\nimport { connect } from \"react-redux\";\nimport \"../../styles/main/view-post.css\";\nimport { Redirect, Link } from \"react-router-dom\";\n\nclass ViewPost extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            comment: \"\"\n        };\n    }\n    componentDidMount() {\n        const { postid } = this.props.match.params;\n        this.props.getPost(postid);\n    }\n\n    handleInputChange = (e) => {\n        const { value } = e.target;\n        this.setState({\n            comment: value\n        });\n    };\n\n    comment = (e) => {\n        e.preventDefault();\n        const { _id } = this.props.say;\n        const { comment } = this.state;\n        if (comment.trimRight() === \"\" || comment.trimRight() === \"\") return;\n        this.props.comment(comment, _id);\n        this.setState({\n            comment: \"\"\n        });\n    };\n    render() {\n        const { say, isgettingsay, authuser } = this.props;\n        const { comment } = this.state;\n        if (!authuser) {\n            return <Redirect to='/auth/login' />;\n        }\n        if (isgettingsay) {\n            return (\n                <React.Fragment>\n                    <NavigationBar />\n                    <div className='camp-main-content'>\n                        <p>Fetching data</p>\n                    </div>\n                </React.Fragment>\n            );\n        } else if (typeof say.said_by != \"undefined\") {\n            const { content, said_by, _id: postid, likes, comments } = say;\n            const { nickname, name, _id } = said_by;\n            return (\n                <React.Fragment>\n                    <NavigationBar />\n                    <div className='camp-main-content'>\n                        <div className='camp-a-say'>\n                            <div className='camp-say-top'>\n                                <div className='camp-say-talker'></div>\n                                <div className='camp-say-talker-details'>\n                                    <h4>\n                                        <Link to={`/profile/${_id}`}>{`${name}`}</Link>\n                                    </h4>\n                                    <p>{`@${nickname}`}</p>\n                                </div>\n                                <div className='camp-say-time'>\n                                    <p>just now</p>\n                                </div>\n                            </div>\n\n                            <div className='camp-say-bottom'>\n                                <div className='camp-say-say'>\n                                    <p>{content}</p>\n                                </div>\n                                <div className='camp-comments'>\n                                    {comments.length\n                                        ? comments.map((comment, index) => {\n                                              const { body, said_by } = comment;\n                                              return <p key={index}>{body}</p>;\n                                          })\n                                        : null}\n                                </div>\n                                <div className='camp-say-comment-box'>\n                                    <form noValidate onSubmit={this.comment}>\n                                        <textarea\n                                            placeholder='your comment'\n                                            value={comment}\n                                            onChange={this.handleInputChange}></textarea>\n                                        <button>comment</button>\n                                    </form>\n                                </div>\n                                <div className='camp-say-reaction'>\n                                    <button\n                                        onClick={() => {\n                                            let sound = new Audio(likeSound);\n                                            sound\n                                                .play()\n                                                .then(() => {\n                                                    sound.remove();\n                                                })\n                                                .catch((err) => {});\n                                            likeOrUnlike(_id);\n                                        }}>\n                                        {likes.length}\n                                        <FavoriteOutlined\n                                            fontSize='small'\n                                            color='secondary'\n                                            className='camp-react'\n                                        />\n                                    </button>\n                                    <button to={{ pathname: `/view-post/${postid}`, say }}>\n                                        {comments.length}{\" \"}\n                                        <ChatBubbleOutlineOutlined\n                                            fontSize='small'\n                                            className='camp-react'\n                                        />\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return (\n                <React.Fragment>\n                    <p>Ooops something is broken</p>\n                </React.Fragment>\n            );\n        }\n    }\n}\nconst mapStateToProps = (state) => {\n    const { conversation, interactions } = state;\n\n    return {\n        say: conversation.viewedPost,\n        isgettingsay: interactions.isgettingsinglesay,\n        authuser: state.authentication.user\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        likeOrUnlike: (postid) => {\n            return dispatch(likeOrUnlike(postid));\n        },\n        getPost: (postid) => {\n            return dispatch(getViewedPostData(postid));\n        },\n        comment: (comment, postid) => {\n            return dispatch(addComment(comment, postid));\n        }\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewPost);\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Signup from \"./components/authentication/signup\";\nimport Login from \"./components/authentication/login\";\nimport Profile from \"./components/profile/profile\";\nimport Home from \"./components/main/home\";\nimport \"./styles/main/main.css\";\nimport Message from \"./components/main/message\";\nimport Chat from \"./components/main/chat\";\nimport Search from \"./components/main/search\";\nimport Notification from \"./components/main/notification\";\nimport ViewPost from \"./components/main/view-post\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: null\n        };\n    }\n\n    render() {\n        const { isverifyingauth, Socket, user } = this.props;\n        return (\n            <React.Fragment>\n                {isverifyingauth ? (\n                    <div className='App'>Verifying authentication</div>\n                ) : (\n                    <BrowserRouter>\n                        <div className='App'>\n                            <Switch>\n                                <Route\n                                    exact\n                                    path='/'\n                                    render={(props) => <Home {...props} Socket={Socket} />}\n                                />\n                                <Route exact path='/auth/signup' component={Signup} />\n                                <Route exact path='/auth/login' component={Login} />\n                                <Route\n                                    exact\n                                    path='/profile/:profile_id'\n                                    render={(props) => <Profile {...props} Socket={Socket} />}\n                                />\n                                <Route\n                                    exact\n                                    path='/messages'\n                                    render={(props) => <Message {...props} Socket={Socket} />}\n                                />\n                                <Route\n                                    exact\n                                    path='/chat/:friendid'\n                                    render={(props) => <Chat {...props} Socket={Socket} />}\n                                />\n\n                                <Route\n                                    exact\n                                    path='/search'\n                                    render={(props) => <Search {...props} Socket={Socket} />}\n                                />\n                                <Route\n                                    exact\n                                    path='/notifications'\n                                    render={(props) => <Notification {...props} Socket={Socket} />}\n                                />\n                                <Route\n                                    exact\n                                    path='/view-post/:postid'\n                                    render={(props) => <ViewPost {...props} Socket={Socket} />}\n                                />\n                            </Switch>\n                        </div>\n                    </BrowserRouter>\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { interactions, authentication } = state;\n    return {\n        isverifyingauth: interactions.isverifyingauthentication,\n        user: authentication.user\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {};\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { SET_ACTIVE_USER } from \"../action-types\";\n\nconst defaultStore = {\n    user: null\n};\n\nexport default function(state = defaultStore, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case SET_ACTIVE_USER:\n            state = { ...state, user: payload };\n            break;\n        default:\n            break;\n    }\n\n    return state;\n}\n","import { SET_VIEWED_PROFILE, SET_VIEWED_USER_SAYS, SET_RELATIONSHIP } from \"../action-types\";\n\nconst initialState = {\n    viewed_user: {},\n    viewed_user_says: [],\n    viewedProfileRelationship: {},\n    isFollowingUser: false,\n    relationshipIsMutual: false\n};\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case SET_VIEWED_PROFILE:\n            state = { ...state, viewed_user: payload };\n            break;\n\n        case SET_VIEWED_USER_SAYS:\n            state = { ...state, viewed_user_says: payload };\n            break;\n        case SET_RELATIONSHIP:\n            state = { ...state, viewedProfileRelationship: payload };\n            break;\n        default:\n            break;\n    }\n\n    return state;\n}\n","import {\n    IS_VERIFYING_AUTHENTICATION,\n    IS_CREATING_ACCOUNT,\n    IS_LOGGING_IN,\n    IS_GETTING_PROFILE_DETAILS,\n    IS_GETTING_SAYS,\n    IS_GETTING_SAY,\n    IS_GETTING_CONVERSATION\n} from \"../action-types\";\n\nconst initState = {\n    isloggingin: false,\n    iscreatingaccount: false,\n    isverifyingauthentication: false,\n    isgettingprofiledetails: false,\n    isgettingsays: false,\n    isgettingsinglesay: false,\n    isgettingconversation: false\n};\n\nexport default function(state = initState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case IS_VERIFYING_AUTHENTICATION:\n            state = { ...state, isverifyingauthentication: payload };\n            break;\n        case IS_CREATING_ACCOUNT:\n            state = { ...state, iscreatingaccount: payload };\n            break;\n        case IS_LOGGING_IN:\n            state = { ...state, isloggingin: payload };\n            break;\n        case IS_GETTING_PROFILE_DETAILS:\n            state = { ...state, isgettingprofiledetails: payload };\n            break;\n        case IS_GETTING_SAYS:\n            state = { ...state, isgettingsays: payload };\n            break;\n\n        case IS_GETTING_SAY:\n            state = { ...state, isgettingsinglesay: payload };\n            break;\n        case IS_GETTING_CONVERSATION:\n            state = { ...state, isgettingconversation: payload };\n            break;\n        default:\n            break;\n    }\n    return state;\n}\n","import {\n    SET_CONVERSATIONS,\n    SET_ACTIVE_CONVERSATION,\n    SET_FEEDS,\n    SET_VIEWED_POST,\n    APPEND_MESSAGE\n} from \"../action-types\";\n\nconst initialState = {\n    conversations: [],\n    activeBubble: {},\n    newsfeeds: [],\n    viewedPost: {}\n};\n\nconst conversationReducer = (state = initialState, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case SET_CONVERSATIONS:\n            state = { ...state, conversations: payload };\n            break;\n        case SET_ACTIVE_CONVERSATION:\n            state = { ...state, activeBubble: payload };\n            break;\n\n        case SET_FEEDS:\n            state = { ...state, newsfeeds: payload };\n            break;\n\n        case SET_VIEWED_POST:\n            state = { ...state, viewedPost: payload };\n            break;\n\n        case APPEND_MESSAGE:\n            let messages = state.activeBubble.conversation.messages;\n            let conversation = state.activeBubble.conversation;\n            state = {\n                ...state,\n                activeBubble: {\n                    ...state.activeBubble,\n                    conversation: {\n                        ...conversation,\n                        messages: [...messages, payload]\n                    }\n                }\n            };\n            break;\n        default:\n            break;\n    }\n\n    return state;\n};\n\nexport default conversationReducer;\n","import { SET_SEARCH_RESULT } from \"../action-types\";\n\nconst initState = {\n    searchedusers: []\n};\n\nconst searchReducer = (state = initState, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case SET_SEARCH_RESULT:\n            state = { ...state, searchedusers: payload };\n            break;\n\n        default:\n            break;\n    }\n    return state;\n};\n\nexport default searchReducer;\n","import { SET_USER_NOTIFICATIONS } from \"../action-types\";\n\nconst initState = {\n    notifications: []\n};\n\nconst notificationsReducer = (state = initState, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case SET_USER_NOTIFICATIONS:\n            state = { ...state, notifications: payload };\n            break;\n        default:\n            break;\n    }\n    return state;\n};\n\nexport default notificationsReducer;\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./auth-reducer\";\nimport profileReducer from \"./profile-reducer\";\nimport AppInteraction from \"./appInteractionReducer\";\nimport ConversationReducer from \"./conversationReducer\";\nimport SearchReducer from \"./searchReducer\";\nimport NotificationReducer from \"./notificationsReducer\";\n\nconst rootReducer = combineReducers({\n    authentication: authReducer,\n    profile: profileReducer,\n    interactions: AppInteraction,\n    conversation: ConversationReducer,\n    searches: SearchReducer,\n    notification: NotificationReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport reduxThunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst middleWare = composeWithDevTools(applyMiddleware(reduxThunk));\nconst store = createStore(rootReducer, undefined, middleWare);\n\nexport default store;\n","import IO from \"socket.io-client\";\n\nconst IOString = \"http://localhost:5000\";\n\nconst Socket = IO(IOString);\n\nexport default Socket;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux\";\nimport \"./styles/base.css\";\nimport { verifyUserAuthentication } from \"./redux/actions/auth-actions\";\nimport Socket from \"./socket\";\n\n// verify that the user is authenticated\nstore.dispatch(verifyUserAuthentication());\nReactDOM.render(\n    <Provider store={store}>\n        <App Socket={Socket} />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/get-outta-here.4633ab40.ogg\";","module.exports = __webpack_public_path__ + \"static/media/insight.3290a035.ogg\";"],"sourceRoot":""}