{"version":3,"sources":["helpers/api-end-points.js","redux/actions/app-interaction.js","redux/action-types.js","redux/actions/auth-actions.js","components/authentication/signup.js","helpers/validateSignupFields.js","redux/actions/feedbacks.js","components/authentication/login.js","redux/actions/profile.js","components/partials/navigation.js","redux/actions/post-comment.js","components/partials/head.js","components/partials/says.js","components/profile/profile.js","components/main/home.js","components/partials/conversation.js","components/main/message.js","redux/actions/conversations.js","components/main/chat.js","redux/actions/chats.js","components/partials/search.js","components/main/search.js","redux/actions/search.js","components/main/notification.js","redux/actions/notifications.js","components/main/view-post.js","App.js","redux/reducers/auth-reducer.js","redux/reducers/profile-reducer.js","redux/reducers/appInteractionReducer.js","redux/reducers/conversationReducer.js","redux/reducers/searchReducer.js","redux/reducers/notificationsReducer.js","redux/reducers/feedbackReducer.js","redux/reducers/index.js","redux/index.js","index.js","assets/audio/get-outta-here.ogg","assets/audio/insight.ogg"],"names":["baseUrl","apiUrl","CREATE_ACCOUNT_ENDPOINT","LOG_IN_USER","VERIFY_AUTHENTICATION","LOG_OUT","GET_USER_PROFILE","CHECK_RELATIONSHIP","LOAD_FEEDS","GET_USER_SAYS","HAVE_SAY","COMMENT","LIKE_UNLIKE","FOLLOW","UNFOLLOW","GET_CONVERSATIONS","GET_ACTIVE_CONVERSATION","SEND_MESSAGE","FIND_SOMEONE","GET_USER_NOTIFICATIONS","GET_POST_DATA","isVerifyingUserAuthentication","verify","type","payload","isLoggingIn","islogginin","isCreatingAccount","iscreatingaccount","isGettingUserProfileDetails","getting","islogginout","logginout","isGettingUserSays","isgetting","isGettingPost","isGettingConversations","isPosting","isposting","isGettingConversation","setActiveUser","user","Signup","props","handleInputChange","e","target","id","value","input","state","setState","createUserAccount","preventDefault","fields","checkError","errors","validationSchema","name","message","isValid","trim","RegExp","test","email","nickname","password","cpassword","field","check","validateSignupFields","error","key","console","log","data","this","nameErr","emailErr","passwordErr","cpasswordErr","nicknameErr","signupfeedback","to","className","style","color","textAlign","onSubmit","noValidate","htmlFor","placeholder","onChange","disabled","padding","Component","connect","interactions","feedbacks","dispatch","axios","post","withCredentials","then","response","signupFeedBack","catch","err","Login","login","username","isloggingin","loginfeedback","loginFeedBack","logUserIn","setViewProfile","setViewedUserProfileSays","says","setRelationship","getUserSays","get","NavigationBar","_id","exact","activeClassName","HomeOutlined","fontSize","SearchOutlined","MessageOutlined","AccountCircle","onClick","logout","background","ExitToApp","authentication","likeOrUnlike","postid","say","setFeeds","feeds","HeadBalloon","postText","postSomething","isgettingsays","postSay","unfollowUser","followUser","page","isAuthUser","relationship","isMutual","isFollowing","renderActions","Fragment","ChatBubbleOutlineRounded","content","audio","Audio","donePosting","play","remove","haveASay","whomToFollow","whoToUnfollow","Says","renderSays","map","index","said_by","likes","comments","id_of_user","sound","likeSound","length","FavoriteOutlined","pathname","ChatBubbleOutlineOutlined","Profile","isAuthUsers","feeds_socket","authUserId","profile_id","match","params","io","getUserProfile","checkRelationship","setInterval","emit","on","newfeeds","oldFeeds","disconnect","viewed_profile","isgettingprofile","profile","viewed_user_says","viewed_user","isgettingprofiledetails","viewedProfileRelationship","authuserid","friendid","Home","newsfeeds","history","push","loadFeeds","reverse","conversation","Conversation","authuser","conversations","isgettingconversations","renderConversations","messages","user1","user2","usr","recentMessage","body","slice","Messages","getConversations","Chat","chat_nsp","friend","sendMessage","trimLeft","trimRight","sender","newmessage","time","Date","now","typing","chatBodyRef","scrollTop","scrollHeight","appendMessage","bottom","fetchConversation","isgettingconversation","chatConversation","gettingconversation","chatm","fontWeight","ref","SendOutlined","nextProps","activeBubble","conversationid","Search","searchedusers","renderSearchedUsers","searchquery","findUser","searches","Axios","Notification","getUserNotifications","notifications","setUserNotifications","ViewPost","comment","getPost","isgettingsay","viewedPost","isgettingsinglesay","getViewedPostData","addComment","App","isverifyingauth","Socket","path","render","isverifyingauthentication","defaultStore","initialState","isFollowingUser","relationshipIsMutual","initState","conversationReducer","action","searchReducer","notificationsReducer","feedbackReducer","rootReducer","combineReducers","ConversationReducer","SearchReducer","notification","NotificationReducer","FeedbackReducer","middleWare","composeWithDevTools","applyMiddleware","reduxThunk","store","createStore","undefined","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1202a3be.chunk.js","sourcesContent":["export const baseUrl = \"https://konert.herokuapp.com\";\nexport const apiUrl = `${baseUrl}/api/v1`;\n\n// authentication\nexport const CREATE_ACCOUNT_ENDPOINT = `${apiUrl}/auth/create-account`;\nexport const LOG_IN_USER = `${apiUrl}/auth/login`;\nexport const VERIFY_AUTHENTICATION = `${apiUrl}/auth/verify-authentication`;\nexport const LOG_OUT = `${apiUrl}/auth/logout`;\n\n// profile\nexport const GET_USER_PROFILE = `${apiUrl}/profile`;\n\n// check relationship between auth user id and the current profile user\nexport const CHECK_RELATIONSHIP = `${apiUrl}/profile/check-connection`;\nexport const LOAD_FEEDS = `${apiUrl}/profile/feeds/get-feeds`;\n\n// says\nexport const GET_USER_SAYS = `${apiUrl}/says`;\n\n// user interactions\nexport const HAVE_SAY = `${apiUrl}/interaction/new-post`;\nexport const COMMENT = `${apiUrl}/interaction/new-comment`;\nexport const LIKE_UNLIKE = `${apiUrl}/interaction/post/like`;\n// following and unfollowing =\nexport const FOLLOW = `${apiUrl}/connections/follow`;\nexport const UNFOLLOW = `${apiUrl}/connections/unfollow`;\n\n// getting users conversations\nexport const GET_CONVERSATIONS = `${apiUrl}/messaging/get-all-conversations`;\nexport const GET_ACTIVE_CONVERSATION = `${apiUrl}/messaging/get-active-conversation`;\n\n// sending message\nexport const SEND_MESSAGE = `${apiUrl}/messaging/new-message`;\n\n// searching for a user\nexport const FIND_SOMEONE = `${apiUrl}/people/search`;\n\n// notification\nexport const GET_USER_NOTIFICATIONS = `${apiUrl}/notifications/get-notifications`;\n\n// viewed post\nexport const GET_POST_DATA = `${apiUrl}/interaction/getpost`;\n","import {\n    IS_LOGGING_IN,\n    IS_CREATING_ACCOUNT,\n    IS_GETTING_PROFILE_DETAILS,\n    IS_GETTING_SAYS,\n    IS_VERIFYING_AUTHENTICATION,\n    IS_GETTING_SAY,\n    IS_GETTING_CONVERSATIONS,\n    IS_POSTING,\n    IS_GETTING_CONVERSATION,\n    LOGGING_OUT\n} from \"../action-types\";\n\nexport const isVerifyingUserAuthentication = (verify) => {\n    return {\n        type: IS_VERIFYING_AUTHENTICATION,\n        payload: verify\n    };\n};\nexport const isLoggingIn = (islogginin) => {\n    return {\n        type: IS_LOGGING_IN,\n        payload: islogginin\n    };\n};\n\nexport const isCreatingAccount = (iscreatingaccount) => {\n    return {\n        type: IS_CREATING_ACCOUNT,\n        payload: iscreatingaccount\n    };\n};\n\nexport const isGettingUserProfileDetails = (getting) => {\n    return {\n        type: IS_GETTING_PROFILE_DETAILS,\n        payload: getting\n    };\n};\nexport const islogginout = (logginout) => {\n    return {\n        type: LOGGING_OUT,\n        payload: logginout\n    };\n};\nexport const isGettingUserSays = (isgetting) => {\n    return {\n        type: IS_GETTING_SAYS,\n        payload: isgetting\n    };\n};\n\nexport const isGettingPost = (isgetting) => {\n    return {\n        type: IS_GETTING_SAY,\n        payload: isgetting\n    };\n};\n\nexport const isGettingConversations = (isgetting) => {\n    return {\n        type: IS_GETTING_CONVERSATIONS,\n        payload: isgetting\n    };\n};\n\nexport const isPosting = (isposting) => {\n    return {\n        type: IS_POSTING,\n        payload: isposting\n    };\n};\n\nexport const isGettingConversation = (isgetting) => {\n    return {\n        type: IS_GETTING_CONVERSATION,\n        payload: isgetting\n    };\n};\n","// Authentication\n\nexport const CREATE_ACCOUNT = \"CREATE_ACCOUNT\";\nexport const SET_ACTIVE_USER = \"SET_ACTIVE_USER\";\n\n// profile actions\n\nexport const SET_VIEWED_PROFILE = \"SET_VIEWED_PROFILE\";\nexport const SET_VIEWED_USER_SAYS = \"SET_VIEWED_USER_SAYS\";\n\n// app interaction\n\nexport const IS_LOGGING_IN = \"IS_LOGGING_IN\";\nexport const IS_CREATING_ACCOUNT = \"IS_CREATING_ACCOUNT\";\nexport const IS_GETTING_PROFILE_DETAILS = \"IS_GETTING_PROFILE_DETAILS\";\nexport const IS_GETTING_SAYS = \"IS_GETTING_SAYS\";\nexport const IS_VERIFYING_AUTHENTICATION = \"IS_VERIFYING_AUTHENTICATION\";\n\n// relationship\nexport const SET_RELATIONSHIP = \"SET_RELATIONSHIP\";\n\n// messages and conversations\nexport const SET_CONVERSATIONS = \"GET_CONVERSATIONS\";\nexport const SET_ACTIVE_CONVERSATION = \"GET_ACTIVE_CONVERSATION\";\n\n// news feeds\nexport const SET_FEEDS = \"SET_FEEDS\";\n\n// setting search result\nexport const SET_SEARCH_RESULT = \"SET_SEARCH_RESULT\";\n\n// notifications\nexport const GET_USER_NOTIFICATIONS = \"GET_USER_NOTIFICATIONS\";\nexport const SET_USER_NOTIFICATIONS = \"SET_USER_NOTIFICATIONS\";\n\n// get viewed post data\nexport const SET_VIEWED_POST = \"SET_VIEWED_POST\";\nexport const IS_GETTING_SAY = \"IS_GETTING_SAY\";\n\n// socket\nexport const APPEND_MESSAGE = \"APPEND_MESSAGE\";\n\nexport const IS_GETTING_CONVERSATIONS = \"IS_GETTING_CONVERSATIONS\";\nexport const IS_GETTING_CONVERSATION = \"IS_GETTING_CONVERSATION\";\n\nexport const IS_POSTING = \"IS_POSTING\";\nexport const LOGGING_OUT = \"LOGGING_OUT\";\n\n// feedbacks\nexport const LOGIN_FEEDBACK = \"LOGIN_FEEDBACK\";\nexport const SIGNUP_FEEDBACK = \"SIGNUP_FEEDBACK\";\n","//import { CREATE_ACCOUNT } from \"../action-types\";\nimport {\n    CREATE_ACCOUNT_ENDPOINT,\n    LOG_IN_USER,\n    VERIFY_AUTHENTICATION,\n    LOG_OUT\n} from \"../../helpers/api-end-points\";\nimport axios from \"axios\";\nimport { SET_ACTIVE_USER } from \"../action-types\";\nimport {\n    isCreatingAccount,\n    isLoggingIn,\n    isVerifyingUserAuthentication,\n    islogginout\n} from \"./app-interaction\";\nimport { loginFeedBack, signupFeedBack } from \"./feedbacks\";\n\nexport const createUserAccount = (data) => {\n    return (dispatch) => {\n        dispatch(isCreatingAccount(true));\n        const createUserAccount = axios.post(CREATE_ACCOUNT_ENDPOINT, data, {\n            withCredentials: true\n        });\n        createUserAccount\n            .then((response) => {\n                const { message } = response.data;\n                dispatch(signupFeedBack(message));\n                dispatch(isCreatingAccount(false));\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch(isCreatingAccount(false));\n            });\n    };\n};\n\nexport const logout = () => {\n    return (dispatch) => {\n        dispatch(islogginout(true));\n        let logout = axios.post(LOG_OUT, {}, { withCredentials: true });\n        logout\n            .then(() => {\n                dispatch(setActiveUser(null));\n                dispatch(islogginout(false));\n            })\n            .catch((err) => dispatch(islogginout(false)));\n    };\n};\n\nexport const logUserIn = (data) => {\n    return (dispatch) => {\n        dispatch(isLoggingIn(true));\n        const logUserIn = axios.post(LOG_IN_USER, data, { withCredentials: true });\n        logUserIn\n            .then((response) => {\n                const { user, message } = response.data;\n                dispatch(loginFeedBack(message));\n                dispatch(setActiveUser(user));\n                dispatch(isLoggingIn(false));\n            })\n            .catch((err) => dispatch(isLoggingIn(false)));\n    };\n};\n\n// verify user authentication\nexport const verifyUserAuthentication = () => {\n    return (dispatch) => {\n        dispatch(isVerifyingUserAuthentication(true));\n        const verifyAuth = axios.post(VERIFY_AUTHENTICATION, null, { withCredentials: true });\n        verifyAuth\n            .then((response) => {\n                const { user } = response.data;\n                dispatch(setActiveUser(user));\n                dispatch(isVerifyingUserAuthentication(false));\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch(isVerifyingUserAuthentication(false));\n            });\n    };\n};\n\nfunction setActiveUser(user) {\n    return {\n        type: SET_ACTIVE_USER,\n        payload: user\n    };\n}\n","import React, { Component } from \"react\";\nimport validateSignupFields from \"../../helpers/validateSignupFields\";\nimport { connect } from \"react-redux\";\nimport { createUserAccount } from \"../../redux/actions/auth-actions\";\nimport \"../../styles/authentication/auth.css\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nclass Signup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            input: {\n                name: \"\",\n                email: \"\",\n                nickname: \"\",\n                password: \"\",\n                cpassword: \"\"\n            },\n            error: {}\n        };\n    }\n\n    handleInputChange = (e) => {\n        const { id, value } = e.target;\n        const input = { ...this.state.input, [id]: value };\n\n        this.setState({\n            input\n        });\n    };\n\n    createUserAccount = (e) => {\n        e.preventDefault();\n        const fields = this.state.input;\n        let checkError = validateSignupFields(fields);\n        let error = false;\n        // check if  fields contains an error\n\n        for (const key in checkError) {\n            if (checkError[key]) {\n                error = true;\n            }\n        }\n        if (error) {\n            console.log(checkError);\n            this.setState({\n                error: checkError\n            });\n        } else {\n            let data = { ...fields };\n            delete data.cpassword;\n            this.props.createUserAccount(data);\n        }\n    };\n\n    render() {\n        const { input, error } = this.state;\n        const { name, email, password, cpassword, nickname } = input;\n        const {\n            name: nameErr,\n            email: emailErr,\n            password: passwordErr,\n            cpassword: cpasswordErr,\n            nickname: nicknameErr\n        } = error;\n        const { user, iscreatingaccount, signupfeedback } = this.props;\n        if (user) {\n            return <Redirect to='/' />;\n        }\n        return (\n            <div className='camp-auth-container'>\n                <h1 style={{ color: \"#fff\", textAlign: \"center\" }}>Konert</h1>\n                <h1 className='camp-auth-title'>Create Account</h1>\n                <form onSubmit={this.createUserAccount} noValidate>\n                    {signupfeedback && <p className='feedback'>{signupfeedback}</p>}\n                    <div className={nameErr && \"error-field\"}>\n                        {nameErr && <span>{nameErr}</span>}\n                        <label htmlFor='name'>\n                            Full Name\n                            <input\n                                type='text'\n                                id='name'\n                                placeholder='James Allen'\n                                onChange={this.handleInputChange}\n                                value={name}\n                            />\n                        </label>\n                    </div>\n\n                    <div className={emailErr && \"error-field\"}>\n                        {emailErr && <span>{emailErr}</span>}\n                        <label htmlFor='email'>\n                            Email\n                            <input\n                                type='email'\n                                id='email'\n                                placeholder='Email'\n                                onChange={this.handleInputChange}\n                                value={email}\n                            />\n                        </label>\n                    </div>\n\n                    <div className={nicknameErr && \"error-field\"}>\n                        {nicknameErr && <span>{nicknameErr}</span>}\n                        <label htmlFor='nickname'>\n                            Nickname\n                            <input\n                                type='text'\n                                id='nickname'\n                                placeholder='Nickname'\n                                onChange={this.handleInputChange}\n                                value={nickname}\n                            />\n                        </label>\n                    </div>\n\n                    <div className={passwordErr && \"error-field\"}>\n                        {passwordErr && <span>{passwordErr}</span>}\n                        <label htmlFor='password'>\n                            Password\n                            <input\n                                type='password'\n                                id='password'\n                                placeholder='Password'\n                                onChange={this.handleInputChange}\n                                value={password}\n                            />\n                        </label>\n                    </div>\n\n                    <div className={cpasswordErr && \"error-field\"}>\n                        {cpasswordErr && <span>{cpasswordErr}</span>}\n                        <label htmlFor='cpassword'>\n                            Confirm Password\n                            <input\n                                type='password'\n                                id='cpassword'\n                                placeholder='Confirm Password'\n                                onChange={this.handleInputChange}\n                                value={cpassword}\n                            />\n                        </label>\n                    </div>\n                    <div>\n                        {iscreatingaccount ? (\n                            <button disabled>Building the lego..</button>\n                        ) : (\n                            <button type='submit'>Create Account</button>\n                        )}\n                    </div>\n                </form>\n                <p style={{ padding: \"10px 0\", textAlign: \"center\" }}>\n                    Already have an account <Link to='/auth/login'>Login</Link>\n                </p>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { interactions, feedbacks } = state;\n\n    return {\n        iscreatingaccount: interactions.iscreatingaccount,\n        signupfeedback: feedbacks.signupfeedback\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createUserAccount: (data) => {\n            return dispatch(createUserAccount(data));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n","export default function(fields) {\n    let errors = {};\n    const validationSchema = {\n        name: {\n            message: \"Name field must be valid, i.e James Allen\",\n            isValid: function(value) {\n                if (value.trim() === \"\") return false;\n                let regex = new RegExp(\"^(?=.[a-zA-Z])\");\n                return regex.test(value);\n            }\n        },\n        email: {\n            message: \"valid email required i.e me@gmail.com\",\n            isValid: function(value) {\n                if (value.trim() === \"\") return false;\n                let regex = new RegExp(\"^[a-zA-Z0-9_.-]{2,}@[a-zA-Z0-9]{2,}.[a-zA-Z0-9]{2,}$\");\n                return regex.test(value);\n            }\n        },\n        nickname: {\n            message: \"Nickname must be alphanumeric and 3 or greater in length\",\n            isValid: function(value) {\n                if (value.trim() === \"\") return false;\n                let regex = /^\\w{1,}$/;\n                return regex.test(value);\n            }\n        },\n        password: {\n            message:\n                \"Password must contain an uppercase, lowercase letter and a number and have min length of 8\",\n            isValid: function(value) {\n                if (value.trim() === \"\") return false;\n                let regex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,30})\");\n                return regex.test(value);\n            }\n        },\n\n        cpassword: {\n            message: \"Passwords do not match\",\n            isValid: function(value) {\n                return value === fields[\"password\"];\n            }\n        }\n    };\n\n    // loop through the fields\n    for (const value in fields) {\n        let field = validationSchema[value];\n        let check = field.isValid(fields[value]);\n        if (!check) {\n            errors[value] = field.message;\n        } else {\n            errors[value] = null;\n        }\n    }\n\n    return errors;\n}\n","import { SIGNUP_FEEDBACK, LOGIN_FEEDBACK } from \"../action-types\";\n\nexport const signupFeedBack = (message) => {\n    return {\n        type: SIGNUP_FEEDBACK,\n        payload: message\n    };\n};\n\nexport const loginFeedBack = (message) => {\n    return {\n        type: LOGIN_FEEDBACK,\n        payload: message\n    };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { logUserIn } from \"../../redux/actions/auth-actions\";\nimport \"../../styles/authentication/auth.css\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            input: {\n                username: \"\",\n                password: \"\"\n            }\n        };\n    }\n\n    handleInputChange = (e) => {\n        const { id, value } = e.target;\n        const input = { ...this.state.input, [id]: value };\n        this.setState({\n            input\n        });\n    };\n\n    login = (e) => {\n        e.preventDefault();\n        const { input: data } = this.state;\n        this.props.login(data);\n    };\n\n    // static getDerivedStateFromProps = (props) => {\n    //     console.log(props);\n    //     const { user } = props;\n    //     if (user) {\n    //         this.props.history.push(\"/\");\n    //     }\n    //     return {};\n    // };\n    render() {\n        const { input } = this.state;\n        const { username, password } = input;\n        const { user, isloggingin, loginfeedback } = this.props;\n        if (user) {\n            return <Redirect to='/' />;\n        }\n        return (\n            <div className='camp-auth-container'>\n                <h1 style={{ color: \"#fff\", textAlign: \"center\" }}>Konert</h1>\n                <h1 className='camp-auth-title'>Login</h1>\n                <form onSubmit={this.login} noValidate>\n                    {loginfeedback && <p className='feedback'>{loginfeedback}</p>}\n                    <div>\n                        <label htmlFor='username'>\n                            <input\n                                type='text'\n                                placeholder='username or email'\n                                id='username'\n                                value={username}\n                                onChange={this.handleInputChange}\n                            />\n                        </label>\n                    </div>\n                    <div>\n                        <label htmlFor='password'>\n                            <input\n                                type='password'\n                                placeholder='Password'\n                                id='password'\n                                value={password}\n                                onChange={this.handleInputChange}\n                            />\n                        </label>\n                    </div>\n                    <div>\n                        {isloggingin ? (\n                            <button disabled>Checking your ID...</button>\n                        ) : (\n                            <button type='submit'>Login</button>\n                        )}\n                    </div>\n                </form>\n                <p style={{ padding: \"10px 0\", textAlign: \"center\" }}>\n                    Don't have an account <Link to='/auth/signup'>Create Account</Link>\n                </p>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { interactions, feedbacks } = state;\n    return {\n        islogginin: interactions.isloggingin,\n        loginfeedback: feedbacks.loginfeedback\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        login: (data) => {\n            return dispatch(logUserIn(data));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import axios from \"axios\";\nimport { SET_VIEWED_PROFILE, SET_VIEWED_USER_SAYS, SET_RELATIONSHIP } from \"../action-types\";\nimport {\n    GET_USER_SAYS,\n    GET_USER_PROFILE,\n    CHECK_RELATIONSHIP,\n    FOLLOW,\n    UNFOLLOW\n} from \"../../helpers/api-end-points\";\nimport { isGettingUserProfileDetails, isGettingUserSays } from \"./app-interaction\";\n\nexport const setViewProfile = (user) => {\n    return {\n        type: SET_VIEWED_PROFILE,\n        payload: user\n    };\n};\n\n// set viewed profile say\nexport const setViewedUserProfileSays = (says) => {\n    return {\n        type: SET_VIEWED_USER_SAYS,\n        payload: says\n    };\n};\n\nexport const setRelationship = (data) => {\n    return {\n        type: SET_RELATIONSHIP,\n        payload: data\n    };\n};\n\n// get a user says\nexport const getUserSays = (id) => {\n    return (dispatch) => {\n        dispatch(isGettingUserSays(true));\n        let getSays = axios.get(`${GET_USER_SAYS}/${id}`, { withCredentials: true });\n        getSays\n            .then((response) => {\n                const { data } = response;\n                dispatch(setViewedUserProfileSays(data.says));\n                dispatch(isGettingUserSays(false));\n            })\n            .catch((err) => isGettingUserSays(false));\n    };\n};\n\n// get user profile\nexport const getUserProfile = (id) => {\n    return (dispatch) => {\n        dispatch(isGettingUserProfileDetails(true));\n        let getProfile = axios.get(`${GET_USER_PROFILE}/${id}`, { withCredentials: true });\n        getProfile\n            .then((response) => {\n                const { user } = response.data;\n                dispatch(setViewProfile(user));\n                dispatch(getUserSays(id));\n                dispatch(isGettingUserProfileDetails(false));\n            })\n            .then((err) => dispatch(isGettingUserProfileDetails(false)));\n    };\n};\n\n// follow a user\nexport const followUser = (id) => {\n    return (dispatch) => {\n        const follow = axios.post(FOLLOW, { whomToFollow: id }, { withCredentials: true });\n        follow\n            .then((response) => {\n                console.log(\"data \", response.data);\n            })\n            .catch((err) => console.log(err));\n    };\n};\n\nexport const unfollowUser = (id) => {\n    console.log(\"let us unfollow user\");\n    return (dispatch) => {\n        const unfollow = axios.post(UNFOLLOW, { whoToUnfollow: id }, { withCredentials: true });\n        unfollow\n            .then((response) => {\n                console.log(response.data);\n            })\n            .then((err) => console.log(err));\n    };\n};\n\nexport const checkRelationship = (friendid) => {\n    return (dispatch) => {\n        // check the relationship between authenticated user and the current profile(user)\n        let checkRelationship = axios.get(`${CHECK_RELATIONSHIP}/${friendid}`, {\n            withCredentials: true\n        });\n        checkRelationship\n            .then((response) => {\n                const { data } = response;\n                console.log(data);\n                dispatch(setRelationship(data));\n            })\n            .catch((err) => console.log(err));\n    };\n};\n","import React, { Component } from \"react\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport \"../../styles/navigation/navigation.css\";\nimport \"../../styles/placeholder.css\";\nimport {\n    HomeOutlined,\n    SearchOutlined,\n    AccountCircle,\n    ExitToApp,\n    MessageOutlined\n} from \"@material-ui/icons\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../redux/actions/auth-actions\";\n\nclass NavigationBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: null\n        };\n    }\n\n    componentDidMount() {\n        this.setState({\n            user: this.props.user\n        });\n    }\n\n    render() {\n        const { user } = this.props;\n        const { _id } = user ? user : {};\n        if (!user) {\n            return <Redirect to='/auth/login' />;\n        }\n        return (\n            <div className='camp-navigation-bar'>\n                <nav className='camp-mobile-navigation-bar'>\n                    <div>\n                        <NavLink to='/' exact activeClassName='camp-active-nav'>\n                            <HomeOutlined fontSize='default' className='camp-navigation-icon' />\n                        </NavLink>\n                    </div>\n                    <div>\n                        <NavLink to='/search' exact activeClassName='camp-active-nav'>\n                            <SearchOutlined fontSize='default' className='camp-navigation-icon' />\n                        </NavLink>\n                    </div>\n                    <div>\n                        <NavLink to='/messages' exact activeClassName='camp-active-nav'>\n                            <MessageOutlined fontSize='default' className='camp-navigation-icon' />\n                        </NavLink>\n                    </div>\n                    <div>\n                        <NavLink to={`/profile/${_id}`} exact activeClassName='camp-active-nav'>\n                            <AccountCircle fontSize='default' className='camp-navigation-icon' />\n                        </NavLink>\n                    </div>\n                    <div>\n                        <button\n                            onClick={() => {\n                                this.props.logout();\n                            }}\n                            style={{ background: \"transparent\" }}>\n                            <ExitToApp fontSize='default' className='camp-navigation-icon' />\n                        </button>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { authentication } = state;\n\n    return {\n        user: authentication.user\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        logout: () => {\n            return dispatch(logout());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationBar);\n","import axios from \"axios\";\nimport {\n    HAVE_SAY,\n    COMMENT,\n    LIKE_UNLIKE,\n    LOAD_FEEDS,\n    GET_POST_DATA\n} from \"../../helpers/api-end-points\";\nimport donePosting from \"../../assets/audio/insight.ogg\";\nimport { SET_FEEDS, SET_VIEWED_POST } from \"../action-types\";\nimport { isGettingPost, isGettingUserSays, isPosting } from \"./app-interaction\";\n\nexport const setViewedPost = (data) => {\n    return {\n        type: SET_VIEWED_POST,\n        payload: data\n    };\n};\nexport const getViewedPostData = (postid) => {\n    return (dispatch) => {\n        dispatch(isGettingPost(true));\n        let post = axios.get(`${GET_POST_DATA}/${postid}`, { withCredentials: true });\n        post.then((response) => {\n            const { say } = response.data;\n            dispatch(isGettingPost(false));\n            dispatch(setViewedPost(say));\n        }).catch((err) => console.log(err));\n    };\n};\nexport const haveASay = (content) => {\n    return (dispatch) => {\n        dispatch(isPosting(true));\n        let makeSay = axios.post(HAVE_SAY, { content }, { withCredentials: true });\n        makeSay\n            .then((response) => {\n                const audio = new Audio(donePosting);\n                audio\n                    .play()\n                    .then(() => {\n                        audio.remove();\n                    })\n                    .catch((err) => console.log(err));\n                dispatch(isPosting(false));\n            })\n            .catch((err) => {\n                dispatch(isPosting(false));\n            });\n    };\n};\n\nexport const addComment = (comment, postid) => {\n    return (dispatch) => {\n        let addcomment = axios.post(COMMENT, { body: comment, postid }, { withCredentials: true });\n        addcomment\n            .then((response) => {})\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n};\n\nexport const likeOrUnlike = (postid) => {\n    return (dispatch) => {\n        let likeorunlike = axios.post(LIKE_UNLIKE, { say: postid }, { withCredentials: true });\n        likeorunlike.then((response) => {}).catch((err) => console.log(err));\n    };\n};\n\nexport const setFeeds = (feeds) => {\n    return {\n        type: SET_FEEDS,\n        payload: feeds\n    };\n};\n\nexport const loadFeeds = () => {\n    return (dispatch) => {\n        dispatch(isGettingUserSays(true));\n        let gettingfeeds = axios.get(LOAD_FEEDS, { withCredentials: true });\n        gettingfeeds\n            .then((response) => {\n                const { data } = response;\n                const { feeds } = data;\n                dispatch(setFeeds(feeds.reverse()));\n                dispatch(isGettingUserSays(false));\n            })\n            .catch((err) => dispatch(isGettingUserSays(false)));\n    };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { haveASay } from \"../../redux/actions/post-comment\";\nimport { Link } from \"react-router-dom\";\nimport { followUser, unfollowUser } from \"../../redux/actions/profile\";\nimport { ChatBubbleOutlineRounded } from \"@material-ui/icons\";\n\nclass HeadBalloon extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            postText: \"\"\n        };\n    }\n    handleInputChange = (e) => {\n        const { value } = e.target;\n        this.setState({\n            postText: value\n        });\n    };\n    postSomething = (e) => {\n        e.preventDefault();\n        const { postText } = this.state;\n        const { isposting, isgettingsays } = this.props;\n        if (postText === \"\" || isposting || isgettingsays) return;\n        // make post to the backend;\n        this.props.postSay(postText);\n        this.setState({\n            postText: \"\"\n        });\n    };\n\n    unfollowUser = () => {\n        // this.props.unFollowUser()\n        const { user, unfollowUser } = this.props;\n        return unfollowUser(user._id);\n    };\n\n    followUser = () => {\n        const { user, followUser } = this.props;\n        return followUser(user._id);\n    };\n    render() {\n        const { postText } = this.state;\n        const { page, isAuthUser, user, relationship, isposting, isgettingsays } = this.props;\n        const { isMutual, isFollowing } = relationship ? relationship : {};\n        const { name, nickname, _id } = user;\n        const renderActions =\n            page === \"profile\" && !isAuthUser ? (\n                <div className='camp-relation-container'>\n                    {isFollowing || isMutual ? (\n                        <button\n                            className='camp-relation camp-relation-unfollow'\n                            onClick={this.unfollowUser}>\n                            Unfollow\n                        </button>\n                    ) : (\n                        <button\n                            className='camp-relation camp-relation-follow'\n                            onClick={this.followUser}>\n                            Follow\n                        </button>\n                    )}\n                    {isMutual && (\n                        <Link to={`/chat/${_id}`}>\n                            <ChatBubbleOutlineRounded color={\"action\"} />\n                        </Link>\n                    )}\n                </div>\n            ) : (\n                <React.Fragment></React.Fragment>\n            );\n        return (\n            <div className='camp-balloon-head'>\n                <div className='camp-head-top'>\n                    <div className='camp-user-avatar'></div>\n                    <div className='camp-user-details'>\n                        <h3>{`${name}`}</h3>\n                        <p>{`@${nickname}`}</p>\n                    </div>\n                </div>\n                {isAuthUser && (\n                    <div className='camp-head-bottom'>\n                        <form noValidate onSubmit={this.postSomething}>\n                            <textarea\n                                placeholder='Have a say'\n                                value={postText}\n                                onChange={this.handleInputChange}></textarea>\n                            {isposting ? (\n                                <button disabled={true}>Posting ...</button>\n                            ) : (\n                                <button> Make Post</button>\n                            )}\n                        </form>\n                    </div>\n                )}\n\n                {renderActions}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        postSay: (content) => {\n            return dispatch(haveASay(content));\n        },\n        followUser: (id) => {\n            return dispatch(followUser(id));\n        },\n        unfollowUser: (id) => {\n            return dispatch(unfollowUser(id));\n        }\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(HeadBalloon);\n","import React, { Component } from \"react\";\nimport { FavoriteOutlined, ChatBubbleOutlineOutlined } from \"@material-ui/icons\";\nimport { connect } from \"react-redux\";\nimport { likeOrUnlike } from \"../../redux/actions/post-comment\";\nimport likeSound from \"../../assets/audio/get-outta-here.ogg\";\nimport { Link } from \"react-router-dom\";\n\nclass Says extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n    render() {\n        const { says, likeOrUnlike, isposting, isgettingsays } = this.props;\n        const renderSays = says ? (\n            says.map((say, index) => {\n                const { content, said_by, _id, likes, comments } = say;\n                const { name, nickname, _id: id_of_user } = said_by;\n                return (\n                    <div className='camp-a-say' key={index}>\n                        <div className='camp-say-top'>\n                            <div className='camp-say-talker'></div>\n                            <div className='camp-say-talker-details'>\n                                <h4>\n                                    <Link to={`/profile/${id_of_user}`}>{`${name}`}</Link>\n                                </h4>\n                                <p>{`@${nickname}`}</p>\n                            </div>\n                            <div className='camp-say-time'>\n                                <p>just now</p>\n                            </div>\n                        </div>\n                        <div className='camp-say-bottom'>\n                            <div className='camp-say-say'>\n                                <p>{content}</p>\n                            </div>\n                            <div className='camp-say-reaction'>\n                                <button\n                                    onClick={() => {\n                                        let sound = new Audio(likeSound);\n                                        sound\n                                            .play()\n                                            .then(() => {\n                                                sound.remove();\n                                            })\n                                            .catch((err) => console.log(err));\n                                        likeOrUnlike(_id);\n                                    }}>\n                                    {likes.length}\n                                    <FavoriteOutlined\n                                        fontSize='small'\n                                        color='secondary'\n                                        className='camp-react'\n                                    />\n                                </button>\n                                <Link to={{ pathname: `/view-post/${_id}`, say }}>\n                                    {comments.length}{\" \"}\n                                    <ChatBubbleOutlineOutlined\n                                        fontSize='small'\n                                        className='camp-react'\n                                    />\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                );\n            })\n        ) : (\n            <div>hello</div>\n        );\n        return (\n            <div className='camp-render-says'>\n                {isposting && (\n                    <div className='camp-say-placeholder'>\n                        <div className='camp-say-like'>\n                            <div className='left'></div>\n                            <div className='right'>\n                                <div className='name'></div>\n                                <div className='nick'></div>\n                            </div>\n                        </div>\n                        <div className='camp-say-text'>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                        </div>\n                    </div>\n                )}\n                {isgettingsays ? (\n                    <React.Fragment>\n                        <div className='camp-say-placeholder'>\n                            <div className='camp-say-like'>\n                                <div className='left'></div>\n                                <div className='right'>\n                                    <div className='name'></div>\n                                    <div className='nick'></div>\n                                </div>\n                            </div>\n                            <div className='camp-say-text'>\n                                <div></div>\n                                <div></div>\n                                <div></div>\n                            </div>\n                        </div>\n                        <div className='camp-say-placeholder'>\n                            <div className='camp-say-like'>\n                                <div className='left'></div>\n                                <div className='right'>\n                                    <div className='name'></div>\n                                    <div className='nick'></div>\n                                </div>\n                            </div>\n                            <div className='camp-say-text'>\n                                <div></div>\n                                <div></div>\n                                <div></div>\n                            </div>\n                        </div>\n                        <div className='camp-say-placeholder'>\n                            <div className='camp-say-like'>\n                                <div className='left'></div>\n                                <div className='right'>\n                                    <div className='name'></div>\n                                    <div className='nick'></div>\n                                </div>\n                            </div>\n                            <div className='camp-say-text'>\n                                <div></div>\n                                <div></div>\n                                <div></div>\n                            </div>\n                        </div>\n                    </React.Fragment>\n                ) : (\n                    renderSays\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { interactions } = state;\n    return {\n        isgettingsays: interactions.isgettingsays,\n        isposting: interactions.isposting\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        likeOrUnlike: (postid) => {\n            return dispatch(likeOrUnlike(postid));\n        }\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Says);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    setViewProfile,\n    getUserSays,\n    getUserProfile,\n    checkRelationship,\n    setRelationship,\n    setViewedUserProfileSays\n} from \"../../redux/actions/profile\";\nimport NavigationBar from \"../partials/navigation\";\nimport HeadBalloon from \"../partials/head\";\nimport Says from \"../partials/says\";\nimport io from \"socket.io-client\";\nimport { baseUrl } from \"../../helpers/api-end-points\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isAuthUsers: false,\n            page: \"profile\",\n            feeds_socket: null\n        };\n    }\n\n    componentDidMount() {\n        const { user, says } = this.props;\n        const { _id: authUserId } = user;\n        const { profile_id } = this.props.match.params;\n        const feeds_socket = io.connect(`${baseUrl}/profile`);\n        if (!user) {\n            return <Redirect to='/auth/login' />;\n        }\n        if (authUserId === profile_id) {\n            this.setState({\n                isAuthUser: true,\n                feeds_socket: feeds_socket\n            });\n            this.props.setViewProfile(user);\n            if (says.length <= 0) {\n                this.props.getUserSays(authUserId);\n            }\n        } else {\n            // get the user profile\n            this.setState({\n                isAuthUser: false\n            });\n            this.props.getUserProfile(profile_id);\n            this.props.checkRelationship(profile_id);\n            setInterval(() => {\n                feeds_socket.emit(\"get_relationship\", { authUserId, profile_id });\n            }, 500);\n        }\n\n        feeds_socket.on(\"connect\", () => {\n            this.setState({\n                feeds_socket\n            });\n            feeds_socket.on(\"set_profile_feeds\", (newfeeds) => {\n                this.props.setFeeds(newfeeds);\n            });\n\n            feeds_socket.on(\"set_relationship\", (relationship) => {\n                this.props.setRelationship(relationship);\n            });\n        });\n\n        setInterval(() => {\n            const { isAuthUser } = this.state;\n            feeds_socket.emit(\"get_profile_feeds\", {\n                oldFeeds: this.props.says,\n                profile_id: isAuthUser ? authUserId : profile_id\n            });\n        }, 500);\n    }\n\n    componentWillUnmount() {\n        const { feeds_socket } = this.state;\n        feeds_socket.disconnect();\n\n        this.setState({\n            feeds_socket: null\n        });\n\n        this.props.setFeeds([]);\n        this.props.setRelationship({});\n        this.props.setViewProfile({});\n    }\n\n    render() {\n        const {\n            says,\n            viewed_profile,\n            isgettingprofile,\n            isgettingsays,\n            relationship,\n            user\n        } = this.props;\n\n        const { isAuthUser, page } = this.state;\n        if (!user) {\n            return <Redirect to='/auth/login' />;\n        }\n        return (\n            <React.Fragment>\n                <NavigationBar />\n                <div className='camp-main-content'>\n                    <React.Fragment>\n                        <HeadBalloon\n                            isAuthUser={isAuthUser}\n                            page={page}\n                            user={viewed_profile}\n                            relationship={relationship}\n                        />\n                        <Says says={says} />\n                    </React.Fragment>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { authentication, profile, interactions } = state;\n    return {\n        user: authentication.user,\n        says: profile.viewed_user_says,\n        viewed_profile: profile.viewed_user,\n        isgettingprofile: interactions.isgettingprofiledetails,\n        isgettingsays: interactions.isgettingsays,\n        relationship: profile.viewedProfileRelationship\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setViewProfile: (user) => {\n            return dispatch(setViewProfile(user));\n        },\n        getUserSays: (id) => {\n            return dispatch(getUserSays(id));\n        },\n        getUserProfile: (id) => {\n            return dispatch(getUserProfile(id));\n        },\n        checkRelationship: (authuserid, friendid) => {\n            return dispatch(checkRelationship(authuserid, friendid));\n        },\n        setRelationship: (relationship) => {\n            return dispatch(setRelationship(relationship));\n        },\n        setFeeds: (feeds) => {\n            return dispatch(setViewedUserProfileSays(feeds));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","import React, { Component } from \"react\";\nimport NavigationBar from \"../partials/navigation\";\nimport HeadBalloon from \"../partials/head\";\nimport Says from \"../partials/says\";\nimport { connect } from \"react-redux\";\nimport { loadFeeds, setFeeds } from \"../../redux/actions/post-comment\";\nimport io from \"socket.io-client\";\nimport { baseUrl } from \"../../helpers/api-end-points\";\nimport { Redirect } from \"react-router-dom\";\nimport Placeholder from \"../partials/placeholder\";\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            feeds_socket: null\n        };\n    }\n    componentDidMount() {\n        const { newsfeeds, user } = this.props;\n\n        if (!user) {\n            return this.props.history.push(\"/auth/login\");\n        }\n        if (newsfeeds.length <= 0) {\n            this.props.loadFeeds();\n        }\n        if (typeof user._id != \"undefined\") {\n            let feeds_socket = io.connect(`${baseUrl}/feeds`);\n            feeds_socket.on(\"connect\", () => {\n                this.setState({\n                    feeds_socket\n                });\n\n                feeds_socket.emit(\"connection_\", user._id);\n                feeds_socket.on(\"got_new_feeds\", (newfeeds) => {\n                    this.props.setFeeds(newfeeds.reverse());\n                });\n            });\n\n            setInterval(() => {\n                const { newsfeeds } = this.props;\n                feeds_socket.emit(\"get_feeds_update\", {\n                    oldFeeds: newsfeeds,\n                    authuserid: user._id\n                });\n            }, 500);\n        }\n    }\n\n    componentWillUnmount() {\n        const { feeds_socket } = this.state;\n        if (feeds_socket) {\n            feeds_socket.disconnect();\n            this.setState({\n                feeds_socket: null\n            });\n        }\n    }\n    render() {\n        const { user, isgettingsays, isposting } = this.props;\n        if (!user) {\n            return <Redirect to='/auth/login' />;\n        }\n        return (\n            <React.Fragment>\n                <NavigationBar />\n                <div className='camp-main-content'>\n                    <React.Fragment>\n                        <HeadBalloon\n                            isAuthUser={true}\n                            user={user}\n                            isgettingsays={isgettingsays}\n                            isposting={isposting}\n                        />\n                        <Says says={this.props.newsfeeds} />\n                    </React.Fragment>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { authentication, conversation, interactions } = state;\n    return {\n        user: authentication.user,\n        newsfeeds: conversation.newsfeeds,\n        isgettingsays: interactions.isgettingsays,\n        isposting: interactions.isposting\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadFeeds: () => {\n            return dispatch(loadFeeds());\n        },\n        setFeeds: (feeds) => {\n            return dispatch(setFeeds(feeds));\n        }\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Conversation = ({ authuser, conversations, isgettingconversations }) => {\n    console.log(conversations);\n    const renderConversations = conversations.map((conversation, index) => {\n        const { messages, user1, user2 } = conversation;\n        const usr = authuser._id === user1._id ? user2 : user1;\n        const recentMessage =\n            messages[messages.length - 1].body.length > 30\n                ? `${messages[messages.length - 1].body.slice(0, 30)}......`\n                : messages[messages.length - 1].body;\n        return (\n            <Link to={`/chat/${usr._id}`} className='camp-a-card' key={index}>\n                <div className='camp-a-card-left'></div>\n                <div className='camp-a-card-right'>\n                    <h4>{usr.name}</h4>\n                    <p>{recentMessage}</p>\n                </div>\n            </Link>\n        );\n    });\n\n    return (\n        <React.Fragment>\n            {isgettingconversations ? (\n                <React.Fragment>\n                    <div className='camp-conversation-placeholder'>\n                        <div className='left'></div>\n                        <div className='right'>\n                            <div></div>\n                            <div></div>\n                        </div>\n                    </div>\n                    <div className='camp-conversation-placeholder'>\n                        <div className='left'></div>\n                        <div className='right'>\n                            <div></div>\n                            <div></div>\n                        </div>\n                    </div>\n                    <div className='camp-conversation-placeholder'>\n                        <div className='left'></div>\n                        <div className='right'>\n                            <div></div>\n                            <div></div>\n                        </div>\n                    </div>\n                    <div className='camp-conversation-placeholder'>\n                        <div className='left'></div>\n                        <div className='right'>\n                            <div></div>\n                            <div></div>\n                        </div>\n                    </div>\n                    <div className='camp-conversation-placeholder'>\n                        <div className='left'></div>\n                        <div className='right'>\n                            <div></div>\n                            <div></div>\n                        </div>\n                    </div>\n                </React.Fragment>\n            ) : (\n                renderConversations\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default Conversation;\n","import React, { Component } from \"react\";\nimport \"../../styles/main/main.css\";\nimport NavigationBar from \"../partials/navigation\";\nimport { connect } from \"react-redux\";\nimport { getConversations } from \"../../redux/actions/conversations\";\nimport Conversation from \"../partials/conversation\";\nimport \"../../styles/conversation/conversation.css\";\nimport { Redirect } from \"react-router-dom\";\nclass Messages extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    componentDidMount() {\n        this.props.getConversations();\n    }\n\n    render() {\n        const { conversations, authuser, isgettingconversations } = this.props;\n\n        return (\n            <React.Fragment>\n                <NavigationBar />\n                <div className='camp-main-content'>\n                    <Conversation\n                        conversations={conversations}\n                        authuser={authuser}\n                        isgettingconversations={isgettingconversations}\n                    />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { conversation, authentication, interactions } = state;\n\n    return {\n        conversations: conversation.conversations,\n        authuser: authentication.user,\n        isgettingconversations: interactions.isgettingconversations\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getConversations: () => {\n            return dispatch(getConversations());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Messages);\n","import axios from \"axios\";\nimport { GET_CONVERSATIONS } from \"../../helpers/api-end-points\";\nimport { SET_CONVERSATIONS } from \"../action-types\";\nimport { isGettingConversations } from \"./app-interaction\";\n\nconst setConversations = (data) => {\n    return {\n        type: SET_CONVERSATIONS,\n        payload: data\n    };\n};\nexport const getConversations = () => {\n    return (dispatch) => {\n        dispatch(isGettingConversations(true));\n        let getconversation = axios.get(GET_CONVERSATIONS, { withCredentials: true });\n        getconversation\n            .then((response) => {\n                console.log(response.data.conversations);\n                dispatch(setConversations(response.data.conversations.reverse()));\n                dispatch(isGettingConversations(false));\n            })\n            .catch((err) => dispatch(isGettingConversations(false)));\n    };\n};\n","import React, { Component } from \"react\";\nimport NavigationBar from \"../partials/navigation\";\nimport \"../../styles/chat/chat.css\";\nimport { SendOutlined } from \"@material-ui/icons\";\nimport { fetchConversation, sendMessage, appendMessage } from \"../../redux/actions/chats\";\nimport { connect } from \"react-redux\";\nimport io from \"socket.io-client\";\nimport { baseUrl } from \"../../helpers/api-end-points\";\nimport { Redirect } from \"react-router-dom\";\nimport Placeholder from \"../partials/placeholder\";\n\nclass Chat extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            body: \"\",\n            chat_nsp: null,\n            typing: false,\n            friend: {},\n            friendid: \"\",\n            bottom: false\n        };\n    }\n\n    componentDidMount() {\n        const { friendid } = this.props.match.params;\n        const { authuser } = this.props;\n        //const { friend } = this.state;\n        this.setState(\n            {\n                friendid\n            },\n            () => {\n                // get the conversation for this user\n                this.props.fetchConversation(friendid);\n            }\n        );\n        const chat_nsp = io.connect(`${baseUrl}/chat`);\n        chat_nsp.on(\"connect\", () => {\n            this.setState({\n                chat_nsp\n            });\n            chat_nsp.emit(\"user_connected\", { user: authuser._id });\n            chat_nsp.on(\"typing\", () => {\n                this.setState({\n                    typing: true\n                });\n            });\n\n            chat_nsp.on(\"done_typing\", () => {\n                this.setState({\n                    typing: false\n                });\n            });\n\n            chat_nsp.on(\"new_message\", (data) => {\n                const { friend } = this.state;\n                console.log(data);\n                if (data.sender !== data.friendid) {\n                    this.props.appendMessage({ ...data, sender: friend._id });\n                }\n            });\n\n            // chat_nsp.on('disconnect', () => {\n            //     chat_nsp.d\n            // })\n        });\n    }\n\n    componentDidUpdate() {\n        const { isgettingconversation } = this.props;\n        if (!isgettingconversation) {\n            const { bottom } = this.state;\n            if (bottom) return;\n            this.setState({\n                bottom: !bottom\n            });\n            this.chatBodyRef.scrollTop = this.chatBodyRef.scrollHeight;\n        }\n    }\n\n    static getDerivedStateFromProps(nextProps, state) {\n        const { chatConversation, authuser } = nextProps;\n\n        if (typeof chatConversation.conversation !== \"undefined\") {\n            const { conversation } = chatConversation;\n            const { user1, user2 } = conversation;\n            return {\n                friend: authuser._id === user1._id ? user2 : user1\n            };\n        } else {\n            return {};\n        }\n    }\n\n    handleInputChange = (e) => {\n        const { value } = e.target;\n        const { chat_nsp, friend } = this.state;\n        if (value !== \"\" && value.length > 0) {\n            chat_nsp.emit(\"typing\", { friend: friend._id });\n        } else {\n            chat_nsp.emit(\"done_typing\", { friend: friend._id });\n        }\n        this.setState({\n            body: value\n        });\n    };\n\n    sendMessage = (e) => {\n        e.preventDefault();\n        const { body, friend, chat_nsp } = this.state;\n        const { authuser } = this.props;\n        console.log(authuser);\n        if (body === \"\" || body.trimLeft() === \"\" || body.trimRight() === \"\") return;\n        const data = { body, friendid: friend._id, sender: authuser._id };\n        const newmessage = { ...data, time: Date.now() };\n\n        this.setState(\n            {\n                body: \"\",\n                typing: false\n            },\n            () => {\n                chat_nsp.emit(\"new_message\", newmessage);\n                chat_nsp.emit(\"done_typing\", { friend: friend._id });\n                this.chatBodyRef.scrollTop = this.chatBodyRef.scrollHeight;\n            }\n        );\n        this.props.appendMessage({ ...newmessage, sender: authuser._id });\n        this.props.sendMessage(data);\n    };\n\n    componentWillUnmount() {\n        const { chat_nsp } = this.state;\n        if (chat_nsp) {\n            chat_nsp.disconnect();\n\n            this.setState({\n                chat_nsp: null\n            });\n        }\n    }\n    render() {\n        const { body, typing, friend } = this.state;\n        const { authuser, chatConversation, gettingconversation } = this.props;\n\n        if (!authuser) {\n            return <Redirect to='/auth/login' />;\n        }\n        const { _id } = authuser;\n        const { conversation } = chatConversation;\n        const chatm = conversation ? (\n            this.props.chatConversation.conversation.messages.map((message, index) => {\n                const { body, sender } = message;\n                return (\n                    <div\n                        className={`camp-chat-balloon ${\n                            sender === _id ? \"camp-balloon-authuser\" : \"camp-balloon-friend\"\n                        }`}\n                        key={index}>\n                        <div className='camp-balloon'>\n                            <p>{body}</p>\n                        </div>\n                    </div>\n                );\n            })\n        ) : (\n            <p>No message oo</p>\n        );\n        return (\n            <React.Fragment>\n                <NavigationBar />\n                <div className='camp-main-content'>\n                    <div className='camp-active-chat-bubble'>\n                        <div className='camp-bubble-head'>\n                            {gettingconversation ? (\n                                <React.Fragment>\n                                    <div className='camp-bubble-head-user'></div>\n                                    <div className='camp-chat-placeholder'>\n                                        <div className='camp-name'></div>\n                                        <div className='camp-username'></div>\n                                    </div>\n                                </React.Fragment>\n                            ) : (\n                                <React.Fragment>\n                                    <div className='camp-bubble-head-user'></div>\n                                    <div className='camp-bubble-head-user-details'>\n                                        <h4>{friend.name}</h4>\n                                        {typing ? (\n                                            <p style={{ color: \"green\", fontWeight: \"bolder\" }}>\n                                                typing...\n                                            </p>\n                                        ) : (\n                                            <p>@{friend.nickname}</p>\n                                        )}\n                                    </div>\n                                </React.Fragment>\n                            )}\n                        </div>\n                        <div className='camp-bubble-body' ref={(ref) => (this.chatBodyRef = ref)}>\n                            {gettingconversation ? (\n                                <React.Fragment>\n                                    <div className='left'>\n                                        <div></div>\n                                    </div>\n                                    <div className='right'>\n                                        <div></div>\n                                    </div>\n                                    <div className='left'>\n                                        <div></div>\n                                    </div>\n                                    <div className='right'>\n                                        <div></div>\n                                    </div>\n                                    <div className='right'>\n                                        <div></div>\n                                    </div>\n                                    <div className='right'>\n                                        <div></div>\n                                    </div>\n                                    <div className='left'>\n                                        <div></div>\n                                    </div>\n                                    <div className='right'>\n                                        <div></div>\n                                    </div>\n                                    <div className='right'>\n                                        <div></div>\n                                    </div>\n                                </React.Fragment>\n                            ) : (\n                                chatm\n                            )}\n                        </div>\n                        <div className='camp-bubble-leg'>\n                            <form noValidate onSubmit={this.sendMessage}>\n                                <textarea\n                                    placeholder='Your message...'\n                                    value={body}\n                                    onChange={this.handleInputChange}></textarea>\n                                <button>\n                                    <SendOutlined fontSize='default' />\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { conversation, authentication, interactions } = state;\n    return {\n        chatConversation: conversation.activeBubble,\n        authuser: authentication.user,\n        gettingconversation: interactions.isgettingconversation\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchConversation: (conversationid, friendid) => {\n            return dispatch(fetchConversation(conversationid, friendid));\n        },\n        sendMessage: (data) => {\n            return dispatch(sendMessage(data));\n        },\n        appendMessage: (data) => {\n            return dispatch(appendMessage(data));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\n","import axios from \"axios\";\nimport { GET_ACTIVE_CONVERSATION, SEND_MESSAGE } from \"../../helpers/api-end-points\";\nimport { SET_ACTIVE_CONVERSATION, APPEND_MESSAGE } from \"../action-types\";\nimport { isGettingConversation } from \"./app-interaction\";\n\nexport const setChatBubble = (data) => {\n    return {\n        type: SET_ACTIVE_CONVERSATION,\n        payload: data\n    };\n};\n\nexport const fetchConversation = (friendid) => {\n    return (dispatch) => {\n        dispatch(isGettingConversation(true));\n        const getConversation = axios.get(`${GET_ACTIVE_CONVERSATION}/${friendid}`, {\n            withCredentials: true\n        });\n        getConversation\n            .then((response) => {\n                dispatch(setChatBubble(response.data));\n                dispatch(isGettingConversation(false));\n            })\n            .catch((err) => {\n                dispatch(isGettingConversation(false));\n            });\n    };\n};\n\nexport const sendMessage = (data) => {\n    return (dispatch) => {\n        const sendmessage = axios.post(SEND_MESSAGE, data, { withCredentials: true });\n        sendmessage.then((response) => {}).catch((err) => console.log(err));\n    };\n};\n\nexport const appendMessage = (data) => {\n    return {\n        type: APPEND_MESSAGE,\n        payload: data\n    };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Search = ({ searchedusers, authuser }) => {\n    const { _id: authuserid } = authuser;\n    const renderSearchedUsers = searchedusers.map((user, index) => {\n        const { _id, name, nickname } = user;\n        return authuserid === _id ? null : (\n            <p className='camp-a-search' key={index}>\n                <Link to={`/profile/${_id}`}>{`${name}`}</Link>\n                <span>@{nickname}</span>\n            </p>\n        );\n    });\n    return <div className='camp-search-results'>{renderSearchedUsers}</div>;\n};\n\nexport default Search;\n","import \"../../styles/search/search.css\";\nimport React, { Component } from \"react\";\nimport HeaderNav from \"../partials/navigation\";\nimport { connect } from \"react-redux\";\nimport { findUser } from \"../../redux/actions/search\";\nimport Searches from \"../partials/search\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchquery: \"\"\n        };\n    }\n\n    handleInputChange = (e) => {\n        const { value } = e.target;\n        this.setState({\n            searchquery: value\n        });\n    };\n\n    findUser = (e) => {\n        console.log(\"finding user\");\n        e.preventDefault();\n        const { searchquery } = this.state;\n        console.log(searchquery);\n        if (searchquery.trimLeft() === \"\" || searchquery.trimRight() === \"\") return;\n        this.props.findUser(searchquery);\n    };\n\n    render() {\n        const { searchquery } = this.state;\n        const { searchedusers, authuser } = this.props;\n        if (!authuser) {\n            return <Redirect to='/auth/login' />;\n        }\n        return (\n            <React.Fragment>\n                <HeaderNav />\n                <div className='camp-main-content'>\n                    <div className='camp-search-container'>\n                        <form noValidate onSubmit={this.findUser}>\n                            <input\n                                type='text'\n                                placeholder='search friend'\n                                value={searchquery}\n                                onChange={this.handleInputChange}\n                            />\n                        </form>\n                    </div>\n                    <Searches authuser={authuser} searchedusers={searchedusers} />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateTProps = (state) => {\n    const { searches, authentication } = state;\n    return {\n        searchedusers: searches.searchedusers,\n        authuser: authentication.user\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        findUser: (searchquery) => {\n            return dispatch(findUser(searchquery));\n        }\n    };\n};\n\nexport default connect(mapStateTProps, mapDispatchToProps)(Search);\n","import Axios from \"axios\";\nimport { FIND_SOMEONE } from \"../../helpers/api-end-points\";\nimport { SET_SEARCH_RESULT } from \"../action-types\";\n\nexport const setSearchResult = (data) => {\n    return {\n        type: SET_SEARCH_RESULT,\n        payload: data\n    };\n};\nexport const findUser = (searchquery) => {\n    console.log(\"let find a user\");\n    return (dispatch) => {\n        let finduser = Axios.get(`${FIND_SOMEONE}/${searchquery}`, { withCredentials: true });\n        finduser\n            .then((response) => {\n                const { searchedusers } = response.data;\n                dispatch(setSearchResult(searchedusers));\n            })\n            .catch((err) => console.log(err));\n    };\n};\n","import React, { Component } from \"react\";\nimport HeaderNav from \"../partials/navigation\";\nimport { connect } from \"react-redux\";\nimport { getUserNotifications } from \"../../redux/actions/notifications\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Notification extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    componentDidMount() {\n        // get user notifications\n        this.props.getUserNotifications();\n    }\n\n    render() {\n        const { authuser } = this.props;\n        if (!authuser) {\n            return <Redirect to='/auth/login' />;\n        }\n        return (\n            <React.Fragment>\n                <HeaderNav />\n                <div className='camp-main-content'>user notifications</div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authuser: state.authentication.user\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getUserNotifications: () => {\n            return dispatch(getUserNotifications());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notification);\n","import axios from \"axios\";\nimport { SET_USER_NOTIFICATIONS } from \"../action-types\";\nimport { GET_USER_NOTIFICATIONS } from \"../../helpers/api-end-points\";\n\nexport const setUserNotifications = (notifications) => {\n    return {\n        type: SET_USER_NOTIFICATIONS,\n        payload: notifications\n    };\n};\nexport const getUserNotifications = () => {\n    return (dispatch) => {\n        const getnotifications = axios.get(GET_USER_NOTIFICATIONS, { withCredentials: true });\n        getnotifications\n            .then((response) => {\n                const { data } = response;\n                const { notifications } = data;\n                console.log(notifications);\n                dispatch(setUserNotifications(notifications));\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n};\n","import React, { Component } from \"react\";\nimport { FavoriteOutlined, ChatBubbleOutlineOutlined } from \"@material-ui/icons\";\nimport NavigationBar from \"../partials/navigation\";\nimport likeSound from \"../../assets/audio/get-outta-here.ogg\";\nimport { likeOrUnlike, getViewedPostData, addComment } from \"../../redux/actions/post-comment\";\nimport { connect } from \"react-redux\";\nimport \"../../styles/main/view-post.css\";\nimport { Redirect, Link } from \"react-router-dom\";\n\nclass ViewPost extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            comment: \"\"\n        };\n    }\n    componentDidMount() {\n        const { postid } = this.props.match.params;\n        this.props.getPost(postid);\n    }\n\n    handleInputChange = (e) => {\n        const { value } = e.target;\n        this.setState({\n            comment: value\n        });\n    };\n\n    comment = (e) => {\n        e.preventDefault();\n        const { _id } = this.props.say;\n        const { comment } = this.state;\n        if (comment.trimRight() === \"\" || comment.trimRight() === \"\") return;\n        this.props.comment(comment, _id);\n        this.setState({\n            comment: \"\"\n        });\n    };\n    render() {\n        const { say, isgettingsay, authuser } = this.props;\n        const { comment } = this.state;\n        if (!authuser) {\n            return <Redirect to='/auth/login' />;\n        }\n        if (isgettingsay) {\n            return (\n                <React.Fragment>\n                    <NavigationBar />\n                    <div className='camp-main-content'>\n                        <p>Fetching data</p>\n                    </div>\n                </React.Fragment>\n            );\n        } else if (typeof say.said_by != \"undefined\") {\n            const { content, said_by, _id: postid, likes, comments } = say;\n            const { nickname, name, _id } = said_by;\n            return (\n                <React.Fragment>\n                    <NavigationBar />\n                    <div className='camp-main-content'>\n                        <div className='camp-a-say'>\n                            <div className='camp-say-top'>\n                                <div className='camp-say-talker'></div>\n                                <div className='camp-say-talker-details'>\n                                    <h4>\n                                        <Link to={`/profile/${_id}`}>{`${name}`}</Link>\n                                    </h4>\n                                    <p>{`@${nickname}`}</p>\n                                </div>\n                                <div className='camp-say-time'>\n                                    <p>just now</p>\n                                </div>\n                            </div>\n\n                            <div className='camp-say-bottom'>\n                                <div className='camp-say-say'>\n                                    <p>{content}</p>\n                                </div>\n                                <div className='camp-comments'>\n                                    {comments.length\n                                        ? comments.map((comment, index) => {\n                                              const { body, said_by } = comment;\n                                              return <p key={index}>{body}</p>;\n                                          })\n                                        : null}\n                                </div>\n                                <div className='camp-say-comment-box'>\n                                    <form noValidate onSubmit={this.comment}>\n                                        <textarea\n                                            placeholder='your comment'\n                                            value={comment}\n                                            onChange={this.handleInputChange}></textarea>\n                                        <button>comment</button>\n                                    </form>\n                                </div>\n                                <div className='camp-say-reaction'>\n                                    <button\n                                        onClick={() => {\n                                            let sound = new Audio(likeSound);\n                                            sound\n                                                .play()\n                                                .then(() => {\n                                                    sound.remove();\n                                                })\n                                                .catch((err) => {});\n                                            likeOrUnlike(_id);\n                                        }}>\n                                        {likes.length}\n                                        <FavoriteOutlined\n                                            fontSize='small'\n                                            color='secondary'\n                                            className='camp-react'\n                                        />\n                                    </button>\n                                    <button to={{ pathname: `/view-post/${postid}`, say }}>\n                                        {comments.length}{\" \"}\n                                        <ChatBubbleOutlineOutlined\n                                            fontSize='small'\n                                            className='camp-react'\n                                        />\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return (\n                <React.Fragment>\n                    <p>Ooops something is broken</p>\n                </React.Fragment>\n            );\n        }\n    }\n}\nconst mapStateToProps = (state) => {\n    const { conversation, interactions } = state;\n\n    return {\n        say: conversation.viewedPost,\n        isgettingsay: interactions.isgettingsinglesay,\n        authuser: state.authentication.user\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        likeOrUnlike: (postid) => {\n            return dispatch(likeOrUnlike(postid));\n        },\n        getPost: (postid) => {\n            return dispatch(getViewedPostData(postid));\n        },\n        comment: (comment, postid) => {\n            return dispatch(addComment(comment, postid));\n        }\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewPost);\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Signup from \"./components/authentication/signup\";\nimport Login from \"./components/authentication/login\";\nimport Profile from \"./components/profile/profile\";\nimport Home from \"./components/main/home\";\nimport \"./styles/main/main.css\";\nimport Message from \"./components/main/message\";\nimport Chat from \"./components/main/chat\";\nimport Search from \"./components/main/search\";\nimport Notification from \"./components/main/notification\";\nimport ViewPost from \"./components/main/view-post\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: null\n        };\n    }\n\n    render() {\n        const { isverifyingauth, Socket, user } = this.props;\n\n        return (\n            <BrowserRouter>\n                {isverifyingauth ? (\n                    <div className='App camp-loader'>\n                        <h2>Konert</h2>\n                        <p>Checking your ID...</p>\n                    </div>\n                ) : (\n                    <div className='App'>\n                        <Switch>\n                            <Route\n                                exact\n                                path='/'\n                                render={(props) => <Home {...props}  />}\n                            />\n                            <Route\n                                exact\n                                path='/auth/signup'\n                                render={(props) => <Signup {...props} user={user} />}\n                            />\n                            <Route\n                                exact\n                                path='/auth/login'\n                                render={(props) => <Login {...props} user={user} />}\n                            />\n                            <Route\n                                exact\n                                path='/profile/:profile_id'\n                                render={(props) => <Profile {...props}  />}\n                            />\n                            <Route\n                                exact\n                                path='/messages'\n                                render={(props) => <Message {...props}  />}\n                            />\n                            <Route\n                                exact\n                                path='/chat/:friendid'\n                                render={(props) => <Chat {...props}  />}\n                            />\n\n                            <Route\n                                exact\n                                path='/search'\n                                render={(props) => <Search {...props}  />}\n                            />\n                            <Route\n                                exact\n                                path='/notifications'\n                                render={(props) => <Notification {...props}  />}\n                            />\n                            <Route\n                                exact\n                                path='/view-post/:postid'\n                                render={(props) => <ViewPost {...props}  />}\n                            />\n                        </Switch>\n                    </div>\n                )}\n            </BrowserRouter>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { interactions, authentication } = state;\n    return {\n        isverifyingauth: interactions.isverifyingauthentication,\n        user: authentication.user\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {};\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { SET_ACTIVE_USER } from \"../action-types\";\n\nconst defaultStore = {\n    user: null\n};\n\nexport default function(state = defaultStore, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case SET_ACTIVE_USER:\n            state = { ...state, user: payload };\n            break;\n        default:\n            break;\n    }\n\n    return state;\n}\n","import { SET_VIEWED_PROFILE, SET_VIEWED_USER_SAYS, SET_RELATIONSHIP } from \"../action-types\";\n\nconst initialState = {\n    viewed_user: {},\n    viewed_user_says: [],\n    viewedProfileRelationship: {},\n    isFollowingUser: false,\n    relationshipIsMutual: false\n};\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case SET_VIEWED_PROFILE:\n            state = { ...state, viewed_user: payload };\n            break;\n\n        case SET_VIEWED_USER_SAYS:\n            state = { ...state, viewed_user_says: payload };\n            break;\n        case SET_RELATIONSHIP:\n            state = { ...state, viewedProfileRelationship: payload };\n            break;\n        default:\n            break;\n    }\n\n    return state;\n}\n","import {\n    IS_VERIFYING_AUTHENTICATION,\n    IS_CREATING_ACCOUNT,\n    IS_LOGGING_IN,\n    IS_GETTING_PROFILE_DETAILS,\n    IS_GETTING_SAYS,\n    IS_GETTING_SAY,\n    IS_GETTING_CONVERSATIONS,\n    IS_POSTING,\n    IS_GETTING_CONVERSATION\n} from \"../action-types\";\n\nconst initState = {\n    isloggingin: false,\n    iscreatingaccount: false,\n    isverifyingauthentication: false,\n    isgettingprofiledetails: false,\n    isgettingsays: false,\n    isgettingsinglesay: false,\n    isgettingconversations: false,\n    isgettingconversation: false,\n    isposting: false\n};\n\nexport default function(state = initState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case IS_VERIFYING_AUTHENTICATION:\n            state = { ...state, isverifyingauthentication: payload };\n            break;\n        case IS_CREATING_ACCOUNT:\n            state = { ...state, iscreatingaccount: payload };\n            break;\n        case IS_LOGGING_IN:\n            state = { ...state, isloggingin: payload };\n            break;\n        case IS_GETTING_PROFILE_DETAILS:\n            state = { ...state, isgettingprofiledetails: payload };\n            break;\n        case IS_GETTING_SAYS:\n            state = { ...state, isgettingsays: payload };\n            break;\n\n        case IS_GETTING_SAY:\n            state = { ...state, isgettingsinglesay: payload };\n            break;\n        case IS_GETTING_CONVERSATIONS:\n            state = { ...state, isgettingconversations: payload };\n            break;\n\n        case IS_POSTING:\n            state = { ...state, isposting: payload };\n            break;\n\n        case IS_GETTING_CONVERSATION:\n            state = { ...state, isgettingconversation: payload };\n            break;\n        default:\n            break;\n    }\n    return state;\n}\n","import {\n    SET_CONVERSATIONS,\n    SET_ACTIVE_CONVERSATION,\n    SET_FEEDS,\n    SET_VIEWED_POST,\n    APPEND_MESSAGE\n} from \"../action-types\";\n\nconst initialState = {\n    conversations: [],\n    activeBubble: {},\n    newsfeeds: [],\n    viewedPost: {}\n};\n\nconst conversationReducer = (state = initialState, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case SET_CONVERSATIONS:\n            state = { ...state, conversations: payload };\n            break;\n        case SET_ACTIVE_CONVERSATION:\n            state = { ...state, activeBubble: payload };\n            break;\n\n        case SET_FEEDS:\n            state = { ...state, newsfeeds: payload };\n            break;\n\n        case SET_VIEWED_POST:\n            state = { ...state, viewedPost: payload };\n            break;\n\n        case APPEND_MESSAGE:\n            let messages = state.activeBubble.conversation.messages;\n            let conversation = state.activeBubble.conversation;\n            state = {\n                ...state,\n                activeBubble: {\n                    ...state.activeBubble,\n                    conversation: {\n                        ...conversation,\n                        messages: [...messages, payload]\n                    }\n                }\n            };\n            break;\n        default:\n            break;\n    }\n\n    return state;\n};\n\nexport default conversationReducer;\n","import { SET_SEARCH_RESULT } from \"../action-types\";\n\nconst initState = {\n    searchedusers: []\n};\n\nconst searchReducer = (state = initState, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case SET_SEARCH_RESULT:\n            state = { ...state, searchedusers: payload };\n            break;\n\n        default:\n            break;\n    }\n    return state;\n};\n\nexport default searchReducer;\n","import { SET_USER_NOTIFICATIONS } from \"../action-types\";\n\nconst initState = {\n    notifications: []\n};\n\nconst notificationsReducer = (state = initState, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case SET_USER_NOTIFICATIONS:\n            state = { ...state, notifications: payload };\n            break;\n        default:\n            break;\n    }\n    return state;\n};\n\nexport default notificationsReducer;\n","import { LOGIN_FEEDBACK, SIGNUP_FEEDBACK } from \"../action-types\";\n\nconst initState = {\n    loginfeedback: null,\n    signupfeedback: null\n};\n\nconst feedbackReducer = (state = initState, action) => {\n    const { type, payload } = action;\n\n    switch (type) {\n        case LOGIN_FEEDBACK:\n            state = { ...state, loginfeedback: payload };\n            break;\n\n        case SIGNUP_FEEDBACK:\n            state = { ...state, signupfeedback: payload };\n            break;\n        default:\n            break;\n    }\n    return state;\n};\n\nexport default feedbackReducer;\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./auth-reducer\";\nimport profileReducer from \"./profile-reducer\";\nimport AppInteraction from \"./appInteractionReducer\";\nimport ConversationReducer from \"./conversationReducer\";\nimport SearchReducer from \"./searchReducer\";\nimport NotificationReducer from \"./notificationsReducer\";\nimport FeedbackReducer from \"./feedbackReducer\";\n\nconst rootReducer = combineReducers({\n    authentication: authReducer,\n    profile: profileReducer,\n    interactions: AppInteraction,\n    conversation: ConversationReducer,\n    searches: SearchReducer,\n    notification: NotificationReducer,\n    feedbacks: FeedbackReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport reduxThunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst middleWare = composeWithDevTools(applyMiddleware(reduxThunk));\nconst store = createStore(rootReducer, undefined, middleWare);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux\";\nimport \"./styles/base.css\";\nimport { verifyUserAuthentication } from \"./redux/actions/auth-actions\";\n\n\n// verify that the user is authenticated\nstore.dispatch(verifyUserAuthentication());\nReactDOM.render(\n    <Provider store={store}>\n        <App  />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/get-outta-here.4633ab40.ogg\";","module.exports = __webpack_public_path__ + \"static/media/insight.3290a035.ogg\";"],"sourceRoot":""}